#! /bin/sh
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH


SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"

# Load the config file.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || { echo "$as_me: error: invalid content: $at_file" >&2
   { (exit 1); exit 1; }; }
done

# atconfig delivers paths relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir in srcdir top_srcdir top_builddir
  do
    at_val=`eval echo '${'at_$at_dir'}'`
    eval "$at_dir=\$at_val/../.."
  done
fi

# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?
at_verbose=:
at_quiet=echo

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# List test groups?
at_list_p=false
# Test groups to run
at_groups=

# The directory we are in.
at_dir=`pwd`
# The directory the whole suite works in.
# Should be absolutely to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The file containing the location of the last AT_CHECK.
at_check_line_file=$at_suite_dir/at-check-line
# The file containing the exit status of the last command.
at_status_file=$at_suite_dir/at-status
# The files containing the output of the tested commands.
at_stdout=$at_suite_dir/at-stdout
at_stder1=$at_suite_dir/at-stder1
at_stderr=$at_suite_dir/at-stderr
# The file containing dates.
at_times_file=$at_suite_dir/at-times

# List of the tested programs.
at_tested='blame'
# List of the all the test groups.
at_groups_all=' banner-1 1 2 3 4 5 6 7 banner-2 8 9 10 11 12 13 banner-3 14 15 16 banner-4 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 banner-5 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 banner-6 61 62 63 64 65 66 67 banner-7 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 banner-8 83 84 85 86 banner-9 87 88 89 90 banner-10 91 92 93 94 95 96 97 98 99 100 banner-11 101 102 103 104 banner-12 105 106 107 banner-13 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 banner-14 130 131 banner-15 132 133 134 135'
# As many dots as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='...'
# Description of all the test groups.
at_help_all='1;argv.at:3;No arguments;argv errors;
2;argv.at:10;Invalid argument;argv errors;
3;argv.at:16;-? and --help;argv;
4;argv.at:22;-V and --version;argv;
5;argv.at:31;Non-existant working file;argv errors;
6;argv.at:37;Non-existant RCS file;argv errors;
7;argv.at:43;Filenames only;argv;
8;pairing.at:3;Working file, then corresponding RCS file;pairing;
9;pairing.at:10;Working file, then independent working file;pairing;
10;pairing.at:20;Working file, then independent RCS file;pairing;
11;pairing.at:30;RCS file, then corresponding working file;pairing;
12;pairing.at:37;RCS file, then independent working file;pairing;
13;pairing.at:47;RCS file, then independent RCS file;pairing;
14;rcs.at:3;No revisions present;rcs errors;
15;rcs.at:10;Two-digit year before 2000;rcs;
16;rcs.at:17;Missing empty line after delta text;rcs;
17;rev.at:3;No revision;rev;
18;rev.at:11;Multiple revisions;rev errors;
19;rev.at:18;Single dot;rev;
20;rev.at:26;Valid trunk branch;rev;
21;rev.at:33;Invalid trunk branch;rev errors;
22;rev.at:40;Valid trunk branch and dot;rev;
23;rev.at:47;Invalid trunk branch and dot;rev errors;
24;rev.at:54;Dot and revision;rev;
25;rev.at:61;Dot and late revision;rev;
26;rev.at:68;Dot and early revision;rev errors;
27;rev.at:75;Symbolic trunk branch;rev symbol;
28;rev.at:83;Symbolic trunk branch and dot;rev symbol;
29;rev.at:91;Symbolic trunk branch and revision;rev symbol;
30;rev.at:99;Symbolic trunk branch and late revision;rev symbol;
31;rev.at:107;Symbolic trunk branch and early revision;rev errors symbol;
32;rev.at:115;Symbolic revision;rev symbol;
33;rev.at:123;Dot and symbolic revision;rev symbol;
34;rev.at:131;Symbolic trunk branch and symbolic revision;rev symbol;
35;rev.at:139;Invalid symbol;rev errors symbol;
36;branch.at:3;Revision on branch;branch rev;
37;branch.at:11;Revision on deep branch;branch rev;
38;branch.at:19;Valid branch;branch rev;
39;branch.at:26;Invalid branch;branch rev errors;
40;branch.at:34;Valid branch and dot;branch rev;
41;branch.at:41;Invalid branch and dot;branch rev errors;
42;branch.at:49;Dot and revision on branch;branch rev;
43;branch.at:57;Dot and late revision on branch;branch rev;
44;branch.at:65;Dot and early revision on branch;branch errors rev;
45;branch.at:73;Dot and branch;branch rev;
46;branch.at:81;Dot, branch and dot;branch rev;
47;branch.at:89;Symbolic branch;branch rev symbol;
48;branch.at:98;Symbolic branch and dot;branch rev symbol;
49;branch.at:107;Symbolic branch and revision;branch rev symbol;
50;branch.at:116;Symbolic branch and late revision;branch rev symbol;
51;branch.at:125;Symbolic branch and early revision;branch errors rev symbol;
52;branch.at:134;Symbolic revision on branch;branch rev symbol;
53;branch.at:143;Dot and symbolic revision on branch;branch rev symbol;
54;branch.at:152;Dot and syumbolic branch;branch rev;
55;branch.at:160;Dot, symbolic branch and dot;branch rev;
56;branch.at:168;Symbolic branch and symbolic revision;branch rev symbol;
57;branch.at:177;Number, symbol and symbol;branch rev symbol;
58;branch.at:186;Symbol, number and symbol;branch rev symbol;
59;branch.at:195;Symbol, symbol and number;branch rev symbol;
60;branch.at:204;Number, symbol and number;branch rev symbol;
61;working.at:3;Valid revision;working rev;
62;working.at:21;Early revision;working rev errors;
63;working.at:39;Late revision;working rev;
64;working.at:57;Branch;working rev errors;
65;working.at:75;Other non-revision;working rev errors;
66;working.at:93;Parsing escape sequences;working rev;
67;working.at:103;Producing escape sequences;working;
68;date.at:3;Missing date argument;date errors;
69;date.at:10;Date after all revisions;date;
70;date.at:18;Date just after a revision;date;
71;date.at:25;Date on a revision;date;
72;date.at:32;Date just before a revision;date;
73;date.at:39;Date between revisions;date;
74;date.at:46;Date before all revisions;date errors;
75;date.at:53;Unparseable date;date errors;
76;date.at:60;Unknown timezone;date errors zone;
77;date.at:68;No timezone;date zone;
78;date.at:80;dd-Mon-yyyy hh:mm:ss;date;
79;date.at:91;h:mm:ss AM yyyymmdd;date;
80;date.at:102;Unusual timezone;date zone;
81;date.at:115;With -z or --zone option;date zone;
82;date.at:128;Multiple dates;date errors;
83;state.at:3;Missing state argument;state errors;
84;state.at:10;Known state;state;
85;state.at:22;Unknown state;state errors;
86;state.at:29;Multiple states;state errors;
87;author.at:3;No author;author;
88;author.at:18;Known author;author;
89;author.at:29;Unknown author;author errors;
90;author.at:36;Multiple authors;author errors;
91;expand.at:3;Default substitutions;expand log;
92;expand.at:26;Default substitutions, with timezone;expand log;
93;expand.at:49;Missing keyword substitution argument;expand errors;
94;expand.at:56;Keys and values (-kkv);expand log;
95;expand.at:81;Keys, values and locker (-kkvl);expand log;
96;expand.at:104;Keys only (-kk);expand log;
97;expand.at:127;Old keywords strings (-ko);expand log;
98;expand.at:147;Binary image of old keywords strings (-kb);expand log;
99;expand.at:167;Values only (-kv);expand log;
100;expand.at:190;Multiple substitution types;expand errors;
101;version.at:3;Invalid version argument;version errors;
102;version.at:12;Emulating RCS version 3;version log;
103;version.at:36;Emulating RCS version 4;version log;
104;version.at:60;Emulating RCS version 5;version log;
105;suffixes.at:3;Default suffixes;suffixes;
106;suffixes.at:9;Nonstandard suffixes;suffixes;
107;suffixes.at:17;Multiple suffixes specifications;suffixes errors;
108;mixed.at:3;Valid -r and -d combo;mixed rev date;
109;mixed.at:13;Invalid -r and -d combo;mixed errors rev date;
110;mixed.at:22;Valid -r and -s combo;mixed rev state;
111;mixed.at:31;Invalid -r and -s combo;mixed errors rev state;
112;mixed.at:40;Valid -r and -w combo;mixed rev author;
113;mixed.at:49;Invalid -r and -w combo;mixed errors rev author;
114;mixed.at:58;Valid -d and -s combo;mixed date state;
115;mixed.at:68;Invalid -d and -s combo;mixed errors date state;
116;mixed.at:77;Valid -d and -w combo;mixed date author;
117;mixed.at:87;Invalid -d and -w combo;mixed errors date author;
118;mixed.at:96;Valid -s and -w combo;mixed state author;
119;mixed.at:105;Invalid -s and -w combo;mixed errors state author;
120;mixed.at:114;Valid -r, -d and -s combo;mixed rev date state;
121;mixed.at:124;Invalid -r, -d and -s combo;mixed errors rev date state;
122;mixed.at:138;Valid -r, -d and -w combo;mixed rev date author;
123;mixed.at:148;Invalid -r, -d and -w combo;mixed errors rev date author;
124;mixed.at:162;Valid -r, -s and -w combo;mixed rev state author;
125;mixed.at:172;Invalid -r, -s and -w combo;mixed errors rev state author;
126;mixed.at:186;Valid -d, -s and -w combo;mixed date state author;
127;mixed.at:196;Invalid -d, -s and -w combo;mixed errors date state author;
128;mixed.at:210;Valid -r, -d, -s and -w combo;mixed rev date state author;
129;mixed.at:221;Invalid -r, -d, -s and -w combo;mixed errors rev date state author;
130;log.at:3;Old Log expansion format;log version;
131;log.at:11;New Log expansion format;log;
132;rcsinit.at:3;Empty RCSINIT;rcsinit rev state;
133;rcsinit.at:12;RCSINIT with options;rcsinit rev state;
134;rcsinit.at:21;RCSINIT with invalid options;rcsinit errors;
135;rcsinit.at:28;RCSINIT with a filename;rcsinit;
'

at_keywords=
at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  at_optarg=`expr "x$at_option" : 'x[^=]*=\(.*\)'`

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	echo "$as_me (blame 1.1)"
	exit 0
	;;

    --clean | -c )
	rm -rf $at_suite_dir $at_suite_log
	exit 0
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=echo; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -vx'; at_traceoff='set +vx'
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_groups="$at_groups$at_option "
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d '-'`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's,^.* '$at_range_start' ,'$at_range_start' ,'`
	at_groups="$at_groups$at_range "
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d '-'`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's, '$at_range_end' .*$, '$at_range_end','`
	at_groups="$at_groups$at_range "
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`echo $at_option |sed 's,-.*,,'`
	at_range_end=`echo $at_option |sed 's,.*-,,'`
	# FIXME: Maybe test to make sure start <= end?
	at_range=`echo " $at_groups_all " | \
	  sed -e 's,^.* '$at_range_start' ,'$at_range_start' ,' \
	      -e 's, '$at_range_end' .*$, '$at_range_end','`
	at_groups="$at_groups$at_range "
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_keywords="$at_keywords,$at_optarg"
	;;

    *=*)
  	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
  	# Reject names that are not valid shell variable names.
  	expr "x$at_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
  	  { echo "$as_me: error: invalid variable name: $at_envvar" >&2
   { (exit 1); exit 1; }; }
  	at_value=`echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
  	eval "$at_envvar='$at_value'"
  	export $at_envvar
	# Propagate to debug scripts.
  	at_debug_args="$at_debug_args $at_option"
  	;;

     *) echo "$as_me: invalid option: $at_option" >&2
	echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Process the --keywords
if test -n "$at_keywords"; then
  at_groups_selected=$at_help_all
  for at_keyword in `IFS=,; set X $at_keywords; shift; echo ${1+$@}`
  do
    # It is on purpose that we match the test group titles too.
    at_groups_selected=`echo "$at_groups_selected" |
			grep -i "^[^;]*;[^;]*.*[; ]$at_keyword[ ;]"`
  done
  at_groups_selected=`echo "$at_groups_selected" | sed 's/;.*//'`
  # Smash the end of lines.
  at_groups_selected=`echo $at_groups_selected`
  at_groups="$at_groups$at_groups_selected "
fi

# Selected test groups.
test -z "$at_groups" && at_groups=$at_groups_all

# Help message.
if $at_help_p; then
  cat <<_ATEOF
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, and save a detailed log file.
Upon failure, create debugging scripts.

You should not change environment variables unless explicitly passed
as command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relatively to the top level of this distribution.  E.g.,

  $ $0 AUTOTEST_PATH=bin

possibly amounts into

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH
_ATEOF
cat <<_ATEOF

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF

Execution tuning:
  -k, --keywords=KEYWORDS
	         select the tests matching all the comma separated KEYWORDS
	         accumulates
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
	         default for debugging scripts
  -d, --debug    inhibit clean up and debug script creation
	         default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF

Report bugs to <foonly@users.sourceforge.net>.
_ATEOF
  exit 0
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF
blame 1.1 test suite test groups:

 NUM: FILENAME:LINE      TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # "  1 42  45 " => "^(1|42|45);".
  at_groups_pattern=`echo "$at_groups" | sed 's/^  *//;s/  *$//;s/  */|/g'`
  echo "$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 { if ($1 !~ /^('"$at_groups_pattern"')$/) next }
	 { if ($1) printf " %3d: %-18s %s\n", $1, $2, $3
	   if ($4) printf "      %s\n", $4 } '
  exit 0
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites, AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
AUTOTEST_PATH=`echo $AUTOTEST_PATH | tr ':' $PATH_SEPARATOR`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  case $as_dir in
  [\\/]* | ?:[\\/]* )
    at_path=$at_path$PATH_SEPARATOR$as_dir
    ;;
  * )
    if test -z "$at_top_builddir"; then
      # Stand-alone test suite.
      at_path=$at_path$PATH_SEPARATOR$as_dir
    else
      # Embedded test suite.
      at_path=$at_path$PATH_SEPARATOR$at_top_builddir/$as_dir
      at_path=$at_path$PATH_SEPARATOR$at_top_srcdir/$as_dir
    fi
    ;;
esac
done


# Now build and simplify PATH.
PATH=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_dir=`(cd "$as_dir" && pwd) 2>/dev/null`
test -d "$as_dir" || continue
case $PATH in
	          $as_dir                 | \
	          $as_dir$PATH_SEPARATOR* | \
  *$PATH_SEPARATOR$as_dir                 | \
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR* ) ;;

  '') PATH=$as_dir ;;
   *) PATH=$PATH$PATH_SEPARATOR$as_dir ;;
esac
done

export PATH

# Setting up the FDs.
# 5 is the log file.  Not to be overwritten if `-d'.

$at_debug_p && at_suite_log=/dev/null
exec 5>$at_suite_log

# Banners and logs.
cat <<\_ASBOX
## --------------------- ##
## blame 1.1 test suite. ##
## --------------------- ##
_ASBOX
{
  cat <<\_ASBOX
## --------------------- ##
## blame 1.1 test suite. ##
## --------------------- ##
_ASBOX
  echo

  echo "$as_me: command line was:"
  echo "  $ $0 $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.
  if test -n "$at_top_srcdir"; then
    cat <<\_ASBOX
## ----------- ##
## ChangeLogs. ##
## ----------- ##
_ASBOX
    echo
    for at_file in `find "$at_top_srcdir" -name ChangeLog -print`
    do
      echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

    {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  echo "PATH: $as_dir"
done

}
    echo
  fi

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done

  cat <<\_ASBOX
## ---------------- ##
## Tested programs. ##
## ---------------- ##
_ASBOX
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -f $as_dir/$at_program && break
done

  if test -f $as_dir/$at_program; then
    {
      echo "testsuite.at:3: $as_dir/$at_program --version"
      $as_dir/$at_program --version
      echo
    } >&5 2>&1
  else
    { { echo "$as_me:$LINENO: error: cannot find $at_program" >&5
echo "$as_me: error: cannot find $at_program" >&2;}
   { (exit 1); exit 1; }; }
  fi
done

{
  cat <<\_ASBOX
## ------------------ ##
## Running the tests. ##
## ------------------ ##
_ASBOX
} >&5

at_start_date=`date`
at_start_time=`(date +%s) 2>/dev/null`
echo "$as_me: starting at: $at_start_date" >&5
at_xpass_list=
at_xfail_list=
at_pass_list=
at_fail_list=
at_skip_list=
at_group_count=0

# Create the master directory if it doesn't already exist.
test -d $at_suite_dir ||
  mkdir $at_suite_dir ||
  { { echo "$as_me:$LINENO: error: cannot create $at_suite_dir" >&5
echo "$as_me: error: cannot create $at_suite_dir" >&2;}
   { (exit 1); exit 1; }; }

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  cp /dev/null $at_devnull
fi

# Use `diff -u' when possible.
if diff -u $at_devnull $at_devnull >/dev/null 2>&1; then
  at_diff='diff -u'
else
  at_diff=diff
fi


for at_group in $at_groups
do
  # Be sure to come back to the top test directory.
  cd $at_suite_dir

  case $at_group in
    banner-*)
      at_group_log=$at_suite_log
      ;;

    *)
      # Skip tests we already run (using --keywords makes it easy to get
      # duplication).
      case " $at_pass_test $at_skip_test $at_fail_test " in
	*" $at_group "* ) continue;;
      esac

      # Normalize the test group number.
      at_group_normalized=`expr "00000$at_group" : ".*\($at_format\)"`

      # Create a fresh directory for the next test group, and enter.
      at_group_dir=$at_suite_dir/$at_group_normalized
      at_group_log=$at_group_dir/$as_me.log
      rm -rf $at_group_dir
      mkdir $at_group_dir ||
	{ { echo "$as_me:$LINENO: error: cannot create $at_group_dir" >&5
echo "$as_me: error: cannot create $at_group_dir" >&2;}
   { (exit 1); exit 1; }; }
      cd $at_group_dir
      ;;
  esac

  echo 0 > $at_status_file

  # Clearly separate the test groups when verbose.
  test $at_group_count != 0 && $at_verbose

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log
  if test $at_verbose = echo; then
    at_tee_pipe="tee -a $at_group_log"
  else
    at_tee_pipe="cat >> $at_group_log"
  fi

  case $at_group in

  banner-1 ) # Banner 1. argv.at:1
    cat <<\_ATEOF

Command line argument parsing.

_ATEOF
    ;;

  1 ) # 1. argv.at:3: No arguments
    at_setup_line='argv.at:3'
    at_desc='No arguments'
    $at_quiet $ECHO_N "  1: No arguments                                 $ECHO_C"
    at_xfail=no
    (
      echo "1. argv.at:3: testing ..."
      $at_traceon



$at_traceoff
echo "argv.at:6: blame"
echo argv.at:6 >$at_check_line_file
( $at_traceon; blame ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "argv.at:6: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  2 ) # 2. argv.at:10: Invalid argument
    at_setup_line='argv.at:10'
    at_desc='Invalid argument'
    $at_quiet $ECHO_N "  2: Invalid argument                             $ECHO_C"
    at_xfail=no
    (
      echo "2. argv.at:10: testing ..."
      $at_traceon



$at_traceoff
echo "argv.at:13: blame --footle"
echo argv.at:13 >$at_check_line_file
( $at_traceon; blame --footle ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "argv.at:13: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  3 ) # 3. argv.at:16: -? and --help
    at_setup_line='argv.at:16'
    at_desc='-? and --help'
    $at_quiet $ECHO_N "  3: -? and --help                                $ECHO_C"
    at_xfail=no
    (
      echo "3. argv.at:16: testing ..."
      $at_traceon


$at_traceoff
echo "argv.at:18: blame -?"
echo argv.at:18 >$at_check_line_file
( $at_traceon; blame -? ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "argv.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "argv.at:19: blame --help"
echo argv.at:19 >$at_check_line_file
( $at_traceon; blame --help ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "argv.at:19: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  4 ) # 4. argv.at:22: -V and --version
    at_setup_line='argv.at:22'
    at_desc='-V and --version'
    $at_quiet $ECHO_N "  4: -V and --version                             $ECHO_C"
    at_xfail=no
    (
      echo "4. argv.at:22: testing ..."
      $at_traceon


cat <<EOF > expout
$package_string; emulating RCS version 5
EOF
$at_traceoff
echo "argv.at:27: blame -V"
echo argv.at:27 >$at_check_line_file
( $at_traceon; blame -V ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "argv.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "argv.at:28: blame --version"
echo argv.at:28 >$at_check_line_file
( $at_traceon; blame --version ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo stdout:; tee stdout <$at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "argv.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  5 ) # 5. argv.at:31: Non-existant working file
    at_setup_line='argv.at:31'
    at_desc='Non-existant working file'
    $at_quiet $ECHO_N "  5: Non-existant working file                    $ECHO_C"
    at_xfail=no
    (
      echo "5. argv.at:31: testing ..."
      $at_traceon



$at_traceoff
echo "argv.at:34: blame /nonexistant"
echo argv.at:34 >$at_check_line_file
( $at_traceon; blame /nonexistant ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "argv.at:34: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  6 ) # 6. argv.at:37: Non-existant RCS file
    at_setup_line='argv.at:37'
    at_desc='Non-existant RCS file'
    $at_quiet $ECHO_N "  6: Non-existant RCS file                        $ECHO_C"
    at_xfail=no
    (
      echo "6. argv.at:37: testing ..."
      $at_traceon



$at_traceoff
echo "argv.at:40: blame /nonexistant,v"
echo argv.at:40 >$at_check_line_file
( $at_traceon; blame /nonexistant,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "argv.at:40: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  7 ) # 7. argv.at:43: Filenames only
    at_setup_line='argv.at:43'
    at_desc='Filenames only'
    $at_quiet $ECHO_N "  7: Filenames only                               $ECHO_C"
    at_xfail=no
    (
      echo "7. argv.at:43: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "argv.at:47: blame \$testdir/simple,v"
echo argv.at:47 >$at_check_line_file
( $at_traceon; blame $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "argv.at:47: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f experr
cat $testdir/simple.experr | sed "s,simple,$testdir/simple,g" > experr
$at_traceoff
echo "argv.at:50: blame \$testdir/simple"
echo argv.at:50 >$at_check_line_file
( $at_traceon; blame $testdir/simple ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "argv.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-2 ) # Banner 2. pairing.at:1
    cat <<\_ATEOF

Filename pairing.

_ATEOF
    ;;

  8 ) # 8. pairing.at:3: Working file, then corresponding RCS file
    at_setup_line='pairing.at:3'
    at_desc='Working file, then corresponding RCS file'
    $at_quiet $ECHO_N "  8: Working file, then corresponding RCS file    $ECHO_C"
    at_xfail=no
    (
      echo "8. pairing.at:3: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cat $testdir/simple.experr | sed "s,simple,$testdir/simple,g" > experr
$at_traceoff
echo "pairing.at:7: blame \$testdir/simple \$testdir/simple,v"
echo pairing.at:7 >$at_check_line_file
( $at_traceon; blame $testdir/simple $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pairing.at:7: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  9 ) # 9. pairing.at:10: Working file, then independent working file
    at_setup_line='pairing.at:10'
    at_desc='Working file, then independent working file'
    $at_quiet $ECHO_N "  9: Working file, then independent working file  $ECHO_C"
    at_xfail=no
    (
      echo "9. pairing.at:10: testing ..."
      $at_traceon


cat $testdir/simple-1.2.expout $testdir/complex-3.8.expout > expout
(
	cat $testdir/simple.experr | sed "s,simple,$testdir/simple,g"
	cat $testdir/complex.experr | sed "s,complex,$testdir/complex,g"
) > experr
$at_traceoff
echo "pairing.at:17: blame \$testdir/simple \$testdir/complex"
echo pairing.at:17 >$at_check_line_file
( $at_traceon; blame $testdir/simple $testdir/complex ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pairing.at:17: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  10 ) # 10. pairing.at:20: Working file, then independent RCS file
    at_setup_line='pairing.at:20'
    at_desc='Working file, then independent RCS file'
    $at_quiet $ECHO_N " 10: Working file, then independent RCS file      $ECHO_C"
    at_xfail=no
    (
      echo "10. pairing.at:20: testing ..."
      $at_traceon


cat $testdir/simple-1.2.expout $testdir/complex-3.8.expout > expout
(
	cat $testdir/simple.experr | sed "s,simple,$testdir/simple,g"
	cat $testdir/complex.experr
) > experr
$at_traceoff
echo "pairing.at:27: blame \$testdir/simple \$testdir/complex,v"
echo pairing.at:27 >$at_check_line_file
( $at_traceon; blame $testdir/simple $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pairing.at:27: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  11 ) # 11. pairing.at:30: RCS file, then corresponding working file
    at_setup_line='pairing.at:30'
    at_desc='RCS file, then corresponding working file'
    $at_quiet $ECHO_N " 11: RCS file, then corresponding working file    $ECHO_C"
    at_xfail=no
    (
      echo "11. pairing.at:30: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cat $testdir/simple.experr | sed "s,simple,$testdir/simple,g" > experr
$at_traceoff
echo "pairing.at:34: blame \$testdir/simple,v \$testdir/simple"
echo pairing.at:34 >$at_check_line_file
( $at_traceon; blame $testdir/simple,v $testdir/simple ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pairing.at:34: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  12 ) # 12. pairing.at:37: RCS file, then independent working file
    at_setup_line='pairing.at:37'
    at_desc='RCS file, then independent working file'
    $at_quiet $ECHO_N " 12: RCS file, then independent working file      $ECHO_C"
    at_xfail=no
    (
      echo "12. pairing.at:37: testing ..."
      $at_traceon


cat $testdir/simple-1.2.expout $testdir/complex-3.8.expout > expout
(
	cat $testdir/simple.experr
	cat $testdir/complex.experr | sed "s,complex,$testdir/complex,g"
) > experr
$at_traceoff
echo "pairing.at:44: blame \$testdir/simple,v \$testdir/complex"
echo pairing.at:44 >$at_check_line_file
( $at_traceon; blame $testdir/simple,v $testdir/complex ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pairing.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  13 ) # 13. pairing.at:47: RCS file, then independent RCS file
    at_setup_line='pairing.at:47'
    at_desc='RCS file, then independent RCS file'
    $at_quiet $ECHO_N " 13: RCS file, then independent RCS file          $ECHO_C"
    at_xfail=no
    (
      echo "13. pairing.at:47: testing ..."
      $at_traceon


cat $testdir/simple-1.2.expout $testdir/complex-3.8.expout > expout
cat $testdir/simple.experr $testdir/complex.experr > experr
$at_traceoff
echo "pairing.at:51: blame \$testdir/simple,v \$testdir/complex,v"
echo pairing.at:51 >$at_check_line_file
( $at_traceon; blame $testdir/simple,v $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pairing.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-3 ) # Banner 3. rcs.at:1
    cat <<\_ATEOF

RCS file parsing.

_ATEOF
    ;;

  14 ) # 14. rcs.at:3: No revisions present
    at_setup_line='rcs.at:3'
    at_desc='No revisions present'
    $at_quiet $ECHO_N " 14: No revisions present                         $ECHO_C"
    at_xfail=no
    (
      echo "14. rcs.at:3: testing ..."
      $at_traceon



$at_traceoff
echo "rcs.at:6: blame \$testdir/empty,v"
echo rcs.at:6 >$at_check_line_file
( $at_traceon; blame $testdir/empty,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rcs.at:6: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  15 ) # 15. rcs.at:10: Two-digit year before 2000
    at_setup_line='rcs.at:10'
    at_desc='Two-digit year before 2000'
    $at_quiet $ECHO_N " 15: Two-digit year before 2000                   $ECHO_C"
    at_xfail=no
    (
      echo "15. rcs.at:10: testing ..."
      $at_traceon


cp $testdir/compat-1.1.expout expout
cp $testdir/compat.experr experr
$at_traceoff
echo "rcs.at:14: blame -r1.1 \$testdir/compat,v"
echo rcs.at:14 >$at_check_line_file
( $at_traceon; blame -r1.1 $testdir/compat,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rcs.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  16 ) # 16. rcs.at:17: Missing empty line after delta text
    at_setup_line='rcs.at:17'
    at_desc='Missing empty line after delta text'
    $at_quiet $ECHO_N " 16: Missing empty line after delta text          $ECHO_C"
    at_xfail=no
    (
      echo "16. rcs.at:17: testing ..."
      $at_traceon


cp $testdir/compat-1.2.expout expout
cp $testdir/compat.experr experr
$at_traceoff
echo "rcs.at:21: blame -r1.2 \$testdir/compat,v"
echo rcs.at:21 >$at_check_line_file
( $at_traceon; blame -r1.2 $testdir/compat,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rcs.at:21: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-4 ) # Banner 4. rev.at:1
    cat <<\_ATEOF

-r and --revision options.

_ATEOF
    ;;

  17 ) # 17. rev.at:3: No revision
    at_setup_line='rev.at:3'
    at_desc='No revision'
    $at_quiet $ECHO_N " 17: No revision                                  $ECHO_C"
    at_xfail=no
    (
      echo "17. rev.at:3: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:7: blame -r -- \$testdir/simple,v"
echo rev.at:7 >$at_check_line_file
( $at_traceon; blame -r -- $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:7: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "rev.at:8: blame --revision -- \$testdir/simple,v"
echo rev.at:8 >$at_check_line_file
( $at_traceon; blame --revision -- $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:8: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  18 ) # 18. rev.at:11: Multiple revisions
    at_setup_line='rev.at:11'
    at_desc='Multiple revisions'
    $at_quiet $ECHO_N " 18: Multiple revisions                           $ECHO_C"
    at_xfail=no
    (
      echo "18. rev.at:11: testing ..."
      $at_traceon



$at_traceoff
echo "rev.at:14: blame -r1.1 -r1.2 \$testdir/simple,v"
echo rev.at:14 >$at_check_line_file
( $at_traceon; blame -r1.1 -r1.2 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:14: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  19 ) # 19. rev.at:18: Single dot
    at_setup_line='rev.at:18'
    at_desc='Single dot'
    $at_quiet $ECHO_N " 19: Single dot                                   $ECHO_C"
    at_xfail=no
    (
      echo "19. rev.at:18: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:22: blame -r. \$testdir/simple,v"
echo rev.at:22 >$at_check_line_file
( $at_traceon; blame -r. $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:22: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "rev.at:23: blame --revision=. \$testdir/simple,v"
echo rev.at:23 >$at_check_line_file
( $at_traceon; blame --revision=. $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:23: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  20 ) # 20. rev.at:26: Valid trunk branch
    at_setup_line='rev.at:26'
    at_desc='Valid trunk branch'
    $at_quiet $ECHO_N " 20: Valid trunk branch                           $ECHO_C"
    at_xfail=no
    (
      echo "20. rev.at:26: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:30: blame -r1 \$testdir/simple,v"
echo rev.at:30 >$at_check_line_file
( $at_traceon; blame -r1 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:30: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  21 ) # 21. rev.at:33: Invalid trunk branch
    at_setup_line='rev.at:33'
    at_desc='Invalid trunk branch'
    $at_quiet $ECHO_N " 21: Invalid trunk branch                         $ECHO_C"
    at_xfail=no
    (
      echo "21. rev.at:33: testing ..."
      $at_traceon



$at_traceoff
echo "rev.at:36: blame -r4 \$testdir/simple,v"
echo rev.at:36 >$at_check_line_file
( $at_traceon; blame -r4 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:36: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  22 ) # 22. rev.at:40: Valid trunk branch and dot
    at_setup_line='rev.at:40'
    at_desc='Valid trunk branch and dot'
    $at_quiet $ECHO_N " 22: Valid trunk branch and dot                   $ECHO_C"
    at_xfail=no
    (
      echo "22. rev.at:40: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:44: blame -r1. \$testdir/simple,v"
echo rev.at:44 >$at_check_line_file
( $at_traceon; blame -r1. $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:44: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  23 ) # 23. rev.at:47: Invalid trunk branch and dot
    at_setup_line='rev.at:47'
    at_desc='Invalid trunk branch and dot'
    $at_quiet $ECHO_N " 23: Invalid trunk branch and dot                 $ECHO_C"
    at_xfail=no
    (
      echo "23. rev.at:47: testing ..."
      $at_traceon



$at_traceoff
echo "rev.at:50: blame -r4. \$testdir/simple,v"
echo rev.at:50 >$at_check_line_file
( $at_traceon; blame -r4. $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:50: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  24 ) # 24. rev.at:54: Dot and revision
    at_setup_line='rev.at:54'
    at_desc='Dot and revision'
    $at_quiet $ECHO_N " 24: Dot and revision                             $ECHO_C"
    at_xfail=no
    (
      echo "24. rev.at:54: testing ..."
      $at_traceon


cp $testdir/simple-1.1.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:58: blame -r.1 \$testdir/simple,v"
echo rev.at:58 >$at_check_line_file
( $at_traceon; blame -r.1 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:58: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  25 ) # 25. rev.at:61: Dot and late revision
    at_setup_line='rev.at:61'
    at_desc='Dot and late revision'
    $at_quiet $ECHO_N " 25: Dot and late revision                        $ECHO_C"
    at_xfail=no
    (
      echo "25. rev.at:61: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:65: blame -r.10 \$testdir/simple,v"
echo rev.at:65 >$at_check_line_file
( $at_traceon; blame -r.10 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:65: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  26 ) # 26. rev.at:68: Dot and early revision
    at_setup_line='rev.at:68'
    at_desc='Dot and early revision'
    $at_quiet $ECHO_N " 26: Dot and early revision                       $ECHO_C"
    at_xfail=no
    (
      echo "26. rev.at:68: testing ..."
      $at_traceon



$at_traceoff
echo "rev.at:71: blame -r.0 \$testdir/simple,v"
echo rev.at:71 >$at_check_line_file
( $at_traceon; blame -r.0 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:71: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  27 ) # 27. rev.at:75: Symbolic trunk branch
    at_setup_line='rev.at:75'
    at_desc='Symbolic trunk branch'
    $at_quiet $ECHO_N " 27: Symbolic trunk branch                        $ECHO_C"
    at_xfail=no
    (
      echo "27. rev.at:75: testing ..."
      $at_traceon



cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:80: blame -rfoo \$testdir/simple,v"
echo rev.at:80 >$at_check_line_file
( $at_traceon; blame -rfoo $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:80: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  28 ) # 28. rev.at:83: Symbolic trunk branch and dot
    at_setup_line='rev.at:83'
    at_desc='Symbolic trunk branch and dot'
    $at_quiet $ECHO_N " 28: Symbolic trunk branch and dot                $ECHO_C"
    at_xfail=no
    (
      echo "28. rev.at:83: testing ..."
      $at_traceon



cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:88: blame -rfoo. \$testdir/simple,v"
echo rev.at:88 >$at_check_line_file
( $at_traceon; blame -rfoo. $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:88: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  29 ) # 29. rev.at:91: Symbolic trunk branch and revision
    at_setup_line='rev.at:91'
    at_desc='Symbolic trunk branch and revision'
    $at_quiet $ECHO_N " 29: Symbolic trunk branch and revision           $ECHO_C"
    at_xfail=no
    (
      echo "29. rev.at:91: testing ..."
      $at_traceon



cp $testdir/simple-1.1.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:96: blame -rfoo.1 \$testdir/simple,v"
echo rev.at:96 >$at_check_line_file
( $at_traceon; blame -rfoo.1 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  30 ) # 30. rev.at:99: Symbolic trunk branch and late revision
    at_setup_line='rev.at:99'
    at_desc='Symbolic trunk branch and late revision'
    $at_quiet $ECHO_N " 30: Symbolic trunk branch and late revision      $ECHO_C"
    at_xfail=no
    (
      echo "30. rev.at:99: testing ..."
      $at_traceon



cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:104: blame -rfoo.10 \$testdir/simple,v"
echo rev.at:104 >$at_check_line_file
( $at_traceon; blame -rfoo.10 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:104: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  31 ) # 31. rev.at:107: Symbolic trunk branch and early revision
    at_setup_line='rev.at:107'
    at_desc='Symbolic trunk branch and early revision'
    $at_quiet $ECHO_N " 31: Symbolic trunk branch and early revision     $ECHO_C"
    at_xfail=no
    (
      echo "31. rev.at:107: testing ..."
      $at_traceon




$at_traceoff
echo "rev.at:111: blame -rfoo.0 \$testdir/simple,v"
echo rev.at:111 >$at_check_line_file
( $at_traceon; blame -rfoo.0 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:111: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  32 ) # 32. rev.at:115: Symbolic revision
    at_setup_line='rev.at:115'
    at_desc='Symbolic revision'
    $at_quiet $ECHO_N " 32: Symbolic revision                            $ECHO_C"
    at_xfail=no
    (
      echo "32. rev.at:115: testing ..."
      $at_traceon



cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:120: blame -rbar \$testdir/simple,v"
echo rev.at:120 >$at_check_line_file
( $at_traceon; blame -rbar $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:120: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  33 ) # 33. rev.at:123: Dot and symbolic revision
    at_setup_line='rev.at:123'
    at_desc='Dot and symbolic revision'
    $at_quiet $ECHO_N " 33: Dot and symbolic revision                    $ECHO_C"
    at_xfail=no
    (
      echo "33. rev.at:123: testing ..."
      $at_traceon



cp $testdir/simple-1.1.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:128: blame -r.foo \$testdir/simple,v"
echo rev.at:128 >$at_check_line_file
( $at_traceon; blame -r.foo $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:128: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  34 ) # 34. rev.at:131: Symbolic trunk branch and symbolic revision
    at_setup_line='rev.at:131'
    at_desc='Symbolic trunk branch and symbolic revision'
    $at_quiet $ECHO_N " 34: Symbolic trunk branch and symbolic revision  $ECHO_C"
    at_xfail=no
    (
      echo "34. rev.at:131: testing ..."
      $at_traceon



cp $testdir/simple-1.1.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "rev.at:136: blame -rfoo.foo \$testdir/simple,v"
echo rev.at:136 >$at_check_line_file
( $at_traceon; blame -rfoo.foo $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rev.at:136: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  35 ) # 35. rev.at:139: Invalid symbol
    at_setup_line='rev.at:139'
    at_desc='Invalid symbol'
    $at_quiet $ECHO_N " 35: Invalid symbol                               $ECHO_C"
    at_xfail=no
    (
      echo "35. rev.at:139: testing ..."
      $at_traceon




$at_traceoff
echo "rev.at:143: blame -rbaz \$testdir/simple,v"
echo rev.at:143 >$at_check_line_file
( $at_traceon; blame -rbaz $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:143: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "rev.at:145: blame -r.baz \$testdir/simple,v"
echo rev.at:145 >$at_check_line_file
( $at_traceon; blame -r.baz $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:145: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "rev.at:147: blame -rbaz. \$testdir/simple,v"
echo rev.at:147 >$at_check_line_file
( $at_traceon; blame -rbaz. $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:147: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "rev.at:149: blame -r1.baz \$testdir/simple,v"
echo rev.at:149 >$at_check_line_file
( $at_traceon; blame -r1.baz $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rev.at:149: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-5 ) # Banner 5. branch.at:1
    cat <<\_ATEOF

Resolving revisions on branches.

_ATEOF
    ;;

  36 ) # 36. branch.at:3: Revision on branch
    at_setup_line='branch.at:3'
    at_desc='Revision on branch'
    $at_quiet $ECHO_N " 36: Revision on branch                           $ECHO_C"
    at_xfail=no
    (
      echo "36. branch.at:3: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.2.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:8: blame -r1.2.1.2 \$testdir/complex,v"
echo branch.at:8 >$at_check_line_file
( $at_traceon; blame -r1.2.1.2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:8: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  37 ) # 37. branch.at:11: Revision on deep branch
    at_setup_line='branch.at:11'
    at_desc='Revision on deep branch'
    $at_quiet $ECHO_N " 37: Revision on deep branch                      $ECHO_C"
    at_xfail=no
    (
      echo "37. branch.at:11: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.1.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:16: blame -r1.2.1.1.1.1 \$testdir/complex,v"
echo branch.at:16 >$at_check_line_file
( $at_traceon; blame -r1.2.1.1.1.1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  38 ) # 38. branch.at:19: Valid branch
    at_setup_line='branch.at:19'
    at_desc='Valid branch'
    $at_quiet $ECHO_N " 38: Valid branch                                 $ECHO_C"
    at_xfail=no
    (
      echo "38. branch.at:19: testing ..."
      $at_traceon



cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:23: blame -r1.2.1.1.1 \$testdir/complex,v"
echo branch.at:23 >$at_check_line_file
( $at_traceon; blame -r1.2.1.1.1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:23: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  39 ) # 39. branch.at:26: Invalid branch
    at_setup_line='branch.at:26'
    at_desc='Invalid branch'
    $at_quiet $ECHO_N " 39: Invalid branch                               $ECHO_C"
    at_xfail=no
    (
      echo "39. branch.at:26: testing ..."
      $at_traceon




$at_traceoff
echo "branch.at:30: blame -r1.2.1.3.1 \$testdir/complex,v"
echo branch.at:30 >$at_check_line_file
( $at_traceon; blame -r1.2.1.3.1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "branch.at:30: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  40 ) # 40. branch.at:34: Valid branch and dot
    at_setup_line='branch.at:34'
    at_desc='Valid branch and dot'
    $at_quiet $ECHO_N " 40: Valid branch and dot                         $ECHO_C"
    at_xfail=no
    (
      echo "40. branch.at:34: testing ..."
      $at_traceon



cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:38: blame -r1.2.1.1.1. \$testdir/complex,v"
echo branch.at:38 >$at_check_line_file
( $at_traceon; blame -r1.2.1.1.1. $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  41 ) # 41. branch.at:41: Invalid branch and dot
    at_setup_line='branch.at:41'
    at_desc='Invalid branch and dot'
    $at_quiet $ECHO_N " 41: Invalid branch and dot                       $ECHO_C"
    at_xfail=no
    (
      echo "41. branch.at:41: testing ..."
      $at_traceon




$at_traceoff
echo "branch.at:45: blame -r1.2.1.3.1. \$testdir/complex,v"
echo branch.at:45 >$at_check_line_file
( $at_traceon; blame -r1.2.1.3.1. $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "branch.at:45: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  42 ) # 42. branch.at:49: Dot and revision on branch
    at_setup_line='branch.at:49'
    at_desc='Dot and revision on branch'
    $at_quiet $ECHO_N " 42: Dot and revision on branch                   $ECHO_C"
    at_xfail=no
    (
      echo "42. branch.at:49: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.2.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:54: blame -r.2.1.2 \$testdir/complex,v"
echo branch.at:54 >$at_check_line_file
( $at_traceon; blame -r.2.1.2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  43 ) # 43. branch.at:57: Dot and late revision on branch
    at_setup_line='branch.at:57'
    at_desc='Dot and late revision on branch'
    $at_quiet $ECHO_N " 43: Dot and late revision on branch              $ECHO_C"
    at_xfail=no
    (
      echo "43. branch.at:57: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:62: blame -r.2.1.10 \$testdir/complex,v"
echo branch.at:62 >$at_check_line_file
( $at_traceon; blame -r.2.1.10 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:62: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  44 ) # 44. branch.at:65: Dot and early revision on branch
    at_setup_line='branch.at:65'
    at_desc='Dot and early revision on branch'
    $at_quiet $ECHO_N " 44: Dot and early revision on branch             $ECHO_C"
    at_xfail=no
    (
      echo "44. branch.at:65: testing ..."
      $at_traceon




$at_traceoff
echo "branch.at:69: blame -r.2.1.0 \$testdir/complex,v"
echo branch.at:69 >$at_check_line_file
( $at_traceon; blame -r.2.1.0 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "branch.at:69: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  45 ) # 45. branch.at:73: Dot and branch
    at_setup_line='branch.at:73'
    at_desc='Dot and branch'
    $at_quiet $ECHO_N " 45: Dot and branch                               $ECHO_C"
    at_xfail=no
    (
      echo "45. branch.at:73: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:78: blame -r.2.1 \$testdir/complex,v"
echo branch.at:78 >$at_check_line_file
( $at_traceon; blame -r.2.1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:78: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  46 ) # 46. branch.at:81: Dot, branch and dot
    at_setup_line='branch.at:81'
    at_desc='Dot, branch and dot'
    $at_quiet $ECHO_N " 46: Dot, branch and dot                          $ECHO_C"
    at_xfail=no
    (
      echo "46. branch.at:81: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:86: blame -r.2.1. \$testdir/complex,v"
echo branch.at:86 >$at_check_line_file
( $at_traceon; blame -r.2.1. $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:86: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  47 ) # 47. branch.at:89: Symbolic branch
    at_setup_line='branch.at:89'
    at_desc='Symbolic branch'
    $at_quiet $ECHO_N " 47: Symbolic branch                              $ECHO_C"
    at_xfail=no
    (
      echo "47. branch.at:89: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:95: blame -rbar \$testdir/complex,v"
echo branch.at:95 >$at_check_line_file
( $at_traceon; blame -rbar $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  48 ) # 48. branch.at:98: Symbolic branch and dot
    at_setup_line='branch.at:98'
    at_desc='Symbolic branch and dot'
    $at_quiet $ECHO_N " 48: Symbolic branch and dot                      $ECHO_C"
    at_xfail=no
    (
      echo "48. branch.at:98: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:104: blame -rbar. \$testdir/complex,v"
echo branch.at:104 >$at_check_line_file
( $at_traceon; blame -rbar. $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:104: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  49 ) # 49. branch.at:107: Symbolic branch and revision
    at_setup_line='branch.at:107'
    at_desc='Symbolic branch and revision'
    $at_quiet $ECHO_N " 49: Symbolic branch and revision                 $ECHO_C"
    at_xfail=no
    (
      echo "49. branch.at:107: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.2.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:113: blame -rbar.2 \$testdir/complex,v"
echo branch.at:113 >$at_check_line_file
( $at_traceon; blame -rbar.2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:113: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  50 ) # 50. branch.at:116: Symbolic branch and late revision
    at_setup_line='branch.at:116'
    at_desc='Symbolic branch and late revision'
    $at_quiet $ECHO_N " 50: Symbolic branch and late revision            $ECHO_C"
    at_xfail=no
    (
      echo "50. branch.at:116: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:122: blame -rbar.10 \$testdir/complex,v"
echo branch.at:122 >$at_check_line_file
( $at_traceon; blame -rbar.10 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:122: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  51 ) # 51. branch.at:125: Symbolic branch and early revision
    at_setup_line='branch.at:125'
    at_desc='Symbolic branch and early revision'
    $at_quiet $ECHO_N " 51: Symbolic branch and early revision           $ECHO_C"
    at_xfail=no
    (
      echo "51. branch.at:125: testing ..."
      $at_traceon





$at_traceoff
echo "branch.at:130: blame -rbar.0 \$testdir/complex,v"
echo branch.at:130 >$at_check_line_file
( $at_traceon; blame -rbar.0 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "branch.at:130: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  52 ) # 52. branch.at:134: Symbolic revision on branch
    at_setup_line='branch.at:134'
    at_desc='Symbolic revision on branch'
    $at_quiet $ECHO_N " 52: Symbolic revision on branch                  $ECHO_C"
    at_xfail=no
    (
      echo "52. branch.at:134: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:140: blame -rbaz \$testdir/complex,v"
echo branch.at:140 >$at_check_line_file
( $at_traceon; blame -rbaz $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:140: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  53 ) # 53. branch.at:143: Dot and symbolic revision on branch
    at_setup_line='branch.at:143'
    at_desc='Dot and symbolic revision on branch'
    $at_quiet $ECHO_N " 53: Dot and symbolic revision on branch          $ECHO_C"
    at_xfail=no
    (
      echo "53. branch.at:143: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.1.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:149: blame -r.quux \$testdir/complex,v"
echo branch.at:149 >$at_check_line_file
( $at_traceon; blame -r.quux $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:149: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  54 ) # 54. branch.at:152: Dot and syumbolic branch
    at_setup_line='branch.at:152'
    at_desc='Dot and syumbolic branch'
    $at_quiet $ECHO_N " 54: Dot and syumbolic branch                     $ECHO_C"
    at_xfail=no
    (
      echo "54. branch.at:152: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:157: blame -r.fred \$testdir/complex,v"
echo branch.at:157 >$at_check_line_file
( $at_traceon; blame -r.fred $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:157: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  55 ) # 55. branch.at:160: Dot, symbolic branch and dot
    at_setup_line='branch.at:160'
    at_desc='Dot, symbolic branch and dot'
    $at_quiet $ECHO_N " 55: Dot, symbolic branch and dot                 $ECHO_C"
    at_xfail=no
    (
      echo "55. branch.at:160: testing ..."
      $at_traceon



cp $testdir/complex-1.2.1.3.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:165: blame -r.fred. \$testdir/complex,v"
echo branch.at:165 >$at_check_line_file
( $at_traceon; blame -r.fred. $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:165: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  56 ) # 56. branch.at:168: Symbolic branch and symbolic revision
    at_setup_line='branch.at:168'
    at_desc='Symbolic branch and symbolic revision'
    $at_quiet $ECHO_N " 56: Symbolic branch and symbolic revision        $ECHO_C"
    at_xfail=no
    (
      echo "56. branch.at:168: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.1.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:174: blame -rplugh.quux \$testdir/complex,v"
echo branch.at:174 >$at_check_line_file
( $at_traceon; blame -rplugh.quux $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:174: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  57 ) # 57. branch.at:177: Number, symbol and symbol
    at_setup_line='branch.at:177'
    at_desc='Number, symbol and symbol'
    $at_quiet $ECHO_N " 57: Number, symbol and symbol                    $ECHO_C"
    at_xfail=no
    (
      echo "57. branch.at:177: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.1.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:183: blame -r1.fred.xyzzy \$testdir/complex,v"
echo branch.at:183 >$at_check_line_file
( $at_traceon; blame -r1.fred.xyzzy $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:183: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  58 ) # 58. branch.at:186: Symbol, number and symbol
    at_setup_line='branch.at:186'
    at_desc='Symbol, number and symbol'
    $at_quiet $ECHO_N " 58: Symbol, number and symbol                    $ECHO_C"
    at_xfail=no
    (
      echo "58. branch.at:186: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:192: blame -rfoo.1.plugh \$testdir/complex,v"
echo branch.at:192 >$at_check_line_file
( $at_traceon; blame -rfoo.1.plugh $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:192: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  59 ) # 59. branch.at:195: Symbol, symbol and number
    at_setup_line='branch.at:195'
    at_desc='Symbol, symbol and number'
    $at_quiet $ECHO_N " 59: Symbol, symbol and number                    $ECHO_C"
    at_xfail=no
    (
      echo "59. branch.at:195: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:201: blame -rfoo.plugh.1 \$testdir/complex,v"
echo branch.at:201 >$at_check_line_file
( $at_traceon; blame -rfoo.plugh.1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:201: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  60 ) # 60. branch.at:204: Number, symbol and number
    at_setup_line='branch.at:204'
    at_desc='Number, symbol and number'
    $at_quiet $ECHO_N " 60: Number, symbol and number                    $ECHO_C"
    at_xfail=no
    (
      echo "60. branch.at:204: testing ..."
      $at_traceon




cp $testdir/complex-1.2.1.1.1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "branch.at:210: blame -r1.2.xyzzy.1 \$testdir/complex,v"
echo branch.at:210 >$at_check_line_file
( $at_traceon; blame -r1.2.xyzzy.1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "branch.at:210: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-6 ) # Banner 6. working.at:1
    cat <<\_ATEOF

Handling RCS tags in working files.

_ATEOF
    ;;

  61 ) # 61. working.at:3: Valid revision
    at_setup_line='working.at:3'
    at_desc='Valid revision'
    $at_quiet $ECHO_N " 61: Valid revision                               $ECHO_C"
    at_xfail=no
    (
      echo "61. working.at:3: testing ..."
      $at_traceon



cp $testdir/keywords.experr experr
cat <<EOF > keywords
\$Revision: 1.1 \$
EOF
$at_traceoff
echo "working.at:10: blame -r'\$' \$testdir/keywords,v"
echo working.at:10 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:10: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Id: keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:14: blame -r'\$' \$testdir/keywords,v"
echo working.at:14 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Header: $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:18: blame -r'\$' \$testdir/keywords,v"
echo working.at:18 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  62 ) # 62. working.at:21: Early revision
    at_setup_line='working.at:21'
    at_desc='Early revision'
    $at_quiet $ECHO_N " 62: Early revision                               $ECHO_C"
    at_xfail=no
    (
      echo "62. working.at:21: testing ..."
      $at_traceon




cat <<EOF > keywords
\$Revision: 1.0 \$
EOF
$at_traceoff
echo "working.at:28: blame -r'\$' \$testdir/keywords,v"
echo working.at:28 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:28: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Id: keywords,v 1.0 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:32: blame -r'\$' \$testdir/keywords,v"
echo working.at:32 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:32: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Header: $testdir/keywords,v 1.0 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:36: blame -r'\$' \$testdir/keywords,v"
echo working.at:36 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:36: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  63 ) # 63. working.at:39: Late revision
    at_setup_line='working.at:39'
    at_desc='Late revision'
    $at_quiet $ECHO_N " 63: Late revision                                $ECHO_C"
    at_xfail=no
    (
      echo "63. working.at:39: testing ..."
      $at_traceon



cp $testdir/keywords.experr experr
cat <<EOF > keywords
\$Revision: 1.2 \$
EOF
$at_traceoff
echo "working.at:46: blame -r'\$' \$testdir/keywords,v"
echo working.at:46 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Id: keywords,v 1.2 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:50: blame -r'\$' \$testdir/keywords,v"
echo working.at:50 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:50: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Header: $testdir/keywords,v 1.2 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:54: blame -r'\$' \$testdir/keywords,v"
echo working.at:54 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  64 ) # 64. working.at:57: Branch
    at_setup_line='working.at:57'
    at_desc='Branch'
    $at_quiet $ECHO_N " 64: Branch                                       $ECHO_C"
    at_xfail=no
    (
      echo "64. working.at:57: testing ..."
      $at_traceon




cat <<EOF > keywords
\$Revision: 1 \$
EOF
$at_traceoff
echo "working.at:64: blame -r'\$' \$testdir/keywords,v"
echo working.at:64 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:64: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Id: keywords,v 1 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:68: blame -r'\$' \$testdir/keywords,v"
echo working.at:68 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:68: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Header: $testdir/keywords,v 1 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:72: blame -r'\$' \$testdir/keywords,v"
echo working.at:72 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:72: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  65 ) # 65. working.at:75: Other non-revision
    at_setup_line='working.at:75'
    at_desc='Other non-revision'
    $at_quiet $ECHO_N " 65: Other non-revision                           $ECHO_C"
    at_xfail=no
    (
      echo "65. working.at:75: testing ..."
      $at_traceon




cat <<EOF > keywords
\$Revision: bar \$
EOF
$at_traceoff
echo "working.at:82: blame -r'\$' \$testdir/keywords,v"
echo working.at:82 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:82: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Id: keywords,v bar 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:86: blame -r'\$' \$testdir/keywords,v"
echo working.at:86 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:86: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

cat <<EOF > keywords
\$Header: $testdir/keywords,v bar 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:90: blame -r'\$' \$testdir/keywords,v"
echo working.at:90 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "working.at:90: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  66 ) # 66. working.at:93: Parsing escape sequences
    at_setup_line='working.at:93'
    at_desc='Parsing escape sequences'
    $at_quiet $ECHO_N " 66: Parsing escape sequences                     $ECHO_C"
    at_xfail=no
    (
      echo "66. working.at:93: testing ..."
      $at_traceon



cp $testdir/keywords.experr experr
cat <<EOF > keywords
\$Id: file\twith\nweird\\symbols\040in\044it,v 1.1 2001/01/01 01:01:01 username Exp \$
EOF
$at_traceoff
echo "working.at:100: blame -r'\$' \$testdir/keywords,v"
echo working.at:100 >$at_check_line_file
( $at_traceon; blame -r'$' $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:100: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  67 ) # 67. working.at:103: Producing escape sequences
    at_setup_line='working.at:103'
    at_desc='Producing escape sequences'
    $at_quiet $ECHO_N " 67: Producing escape sequences                   $ECHO_C"
    at_xfail=no
    (
      echo "67. working.at:103: testing ..."
      $at_traceon


cp $testdir/escape,v 'x$ x,v'
cat <<EOF > 'x$ x'
\$Id: x\044\040x,v 1.1 2001/01/01 01:01:01 username Exp \$
EOF
cat $testdir/escape.experr | sed 's,escape,x$ x,g' > experr
$at_traceoff
echo "working.at:110: blame 'x\$ x'"
echo working.at:110 >$at_check_line_file
( $at_traceon; blame 'x$ x' ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
echo stdout:; cat $at_stdout
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "working.at:110: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-7 ) # Banner 7. date.at:1
    cat <<\_ATEOF

-d and --date options.

_ATEOF
    ;;

  68 ) # 68. date.at:3: Missing date argument
    at_setup_line='date.at:3'
    at_desc='Missing date argument'
    $at_quiet $ECHO_N " 68: Missing date argument                        $ECHO_C"
    at_xfail=no
    (
      echo "68. date.at:3: testing ..."
      $at_traceon



$at_traceoff
echo "date.at:6: blame \$testdir/simple,v -d"
echo date.at:6 >$at_check_line_file
( $at_traceon; blame $testdir/simple,v -d ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "date.at:6: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  69 ) # 69. date.at:10: Date after all revisions
    at_setup_line='date.at:10'
    at_desc='Date after all revisions'
    $at_quiet $ECHO_N " 69: Date after all revisions                     $ECHO_C"
    at_xfail=no
    (
      echo "69. date.at:10: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "date.at:14: blame -d'2002-02-03 UTC' \$testdir/simple,v"
echo date.at:14 >$at_check_line_file
( $at_traceon; blame -d'2002-02-03 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:15: blame --date='2002-02-03 UTC' \$testdir/simple,v"
echo date.at:15 >$at_check_line_file
( $at_traceon; blame --date='2002-02-03 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  70 ) # 70. date.at:18: Date just after a revision
    at_setup_line='date.at:18'
    at_desc='Date just after a revision'
    $at_quiet $ECHO_N " 70: Date just after a revision                   $ECHO_C"
    at_xfail=no
    (
      echo "70. date.at:18: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "date.at:22: blame -d'2002-02-02 02:02:03 UTC' \$testdir/simple,v"
echo date.at:22 >$at_check_line_file
( $at_traceon; blame -d'2002-02-02 02:02:03 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:22: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  71 ) # 71. date.at:25: Date on a revision
    at_setup_line='date.at:25'
    at_desc='Date on a revision'
    $at_quiet $ECHO_N " 71: Date on a revision                           $ECHO_C"
    at_xfail=no
    (
      echo "71. date.at:25: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "date.at:29: blame -d'2002-02-02 02:02:02 UTC' \$testdir/simple,v"
echo date.at:29 >$at_check_line_file
( $at_traceon; blame -d'2002-02-02 02:02:02 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:29: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  72 ) # 72. date.at:32: Date just before a revision
    at_setup_line='date.at:32'
    at_desc='Date just before a revision'
    $at_quiet $ECHO_N " 72: Date just before a revision                  $ECHO_C"
    at_xfail=no
    (
      echo "72. date.at:32: testing ..."
      $at_traceon


cp $testdir/simple-1.1.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "date.at:36: blame -d'2002-02-02 02:02:01 UTC' \$testdir/simple,v"
echo date.at:36 >$at_check_line_file
( $at_traceon; blame -d'2002-02-02 02:02:01 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  73 ) # 73. date.at:39: Date between revisions
    at_setup_line='date.at:39'
    at_desc='Date between revisions'
    $at_quiet $ECHO_N " 73: Date between revisions                       $ECHO_C"
    at_xfail=no
    (
      echo "73. date.at:39: testing ..."
      $at_traceon


cp $testdir/simple-1.1.expout expout
cp $testdir/simple.experr experr
$at_traceoff
echo "date.at:43: blame -d'2001-01-02 UTC' \$testdir/simple,v"
echo date.at:43 >$at_check_line_file
( $at_traceon; blame -d'2001-01-02 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:43: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  74 ) # 74. date.at:46: Date before all revisions
    at_setup_line='date.at:46'
    at_desc='Date before all revisions'
    $at_quiet $ECHO_N " 74: Date before all revisions                    $ECHO_C"
    at_xfail=no
    (
      echo "74. date.at:46: testing ..."
      $at_traceon



$at_traceoff
echo "date.at:49: blame -d'2000-01-01 UTC' \$testdir/simple,v"
echo date.at:49 >$at_check_line_file
( $at_traceon; blame -d'2000-01-01 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "date.at:49: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  75 ) # 75. date.at:53: Unparseable date
    at_setup_line='date.at:53'
    at_desc='Unparseable date'
    $at_quiet $ECHO_N " 75: Unparseable date                             $ECHO_C"
    at_xfail=no
    (
      echo "75. date.at:53: testing ..."
      $at_traceon



$at_traceoff
echo "date.at:56: blame -d'floopy' \$testdir/simple,v"
echo date.at:56 >$at_check_line_file
( $at_traceon; blame -d'floopy' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "date.at:56: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  76 ) # 76. date.at:60: Unknown timezone
    at_setup_line='date.at:60'
    at_desc='Unknown timezone'
    $at_quiet $ECHO_N " 76: Unknown timezone                             $ECHO_C"
    at_xfail=no
    (
      echo "76. date.at:60: testing ..."
      $at_traceon




$at_traceoff
echo "date.at:64: blame -d'2000-01-01 FLOOPY' \$testdir/simple,v"
echo date.at:64 >$at_check_line_file
( $at_traceon; blame -d'2000-01-01 FLOOPY' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "date.at:64: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  77 ) # 77. date.at:68: No timezone
    at_setup_line='date.at:68'
    at_desc='No timezone'
    $at_quiet $ECHO_N " 77: No timezone                                  $ECHO_C"
    at_xfail=no
    (
      echo "77. date.at:68: testing ..."
      $at_traceon



cp $testdir/simple.experr experr
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "date.at:73: blame -d'2002-02-02 02:02:03' \$testdir/simple,v"
echo date.at:73 >$at_check_line_file
( $at_traceon; blame -d'2002-02-02 02:02:03' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:74: blame -d'2002-02-02 02:02:02' \$testdir/simple,v"
echo date.at:74 >$at_check_line_file
( $at_traceon; blame -d'2002-02-02 02:02:02' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "date.at:77: blame -d'2002-02-02 02:02:01' \$testdir/simple,v"
echo date.at:77 >$at_check_line_file
( $at_traceon; blame -d'2002-02-02 02:02:01' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:77: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  78 ) # 78. date.at:80: dd-Mon-yyyy hh:mm:ss
    at_setup_line='date.at:80'
    at_desc='dd-Mon-yyyy hh:mm:ss'
    $at_quiet $ECHO_N " 78: dd-Mon-yyyy hh:mm:ss                         $ECHO_C"
    at_xfail=no
    (
      echo "78. date.at:80: testing ..."
      $at_traceon


cp $testdir/simple.experr experr
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "date.at:84: blame -d'02-Feb-2002 02:02:03 UTC' \$testdir/simple,v"
echo date.at:84 >$at_check_line_file
( $at_traceon; blame -d'02-Feb-2002 02:02:03 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:85: blame -d'02-Feb-2002 02:02:02 UTC' \$testdir/simple,v"
echo date.at:85 >$at_check_line_file
( $at_traceon; blame -d'02-Feb-2002 02:02:02 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:85: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "date.at:88: blame -d'02-Feb-2002 02:02:01 UTC' \$testdir/simple,v"
echo date.at:88 >$at_check_line_file
( $at_traceon; blame -d'02-Feb-2002 02:02:01 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:88: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  79 ) # 79. date.at:91: h:mm:ss AM yyyymmdd
    at_setup_line='date.at:91'
    at_desc='h:mm:ss AM yyyymmdd'
    $at_quiet $ECHO_N " 79: h:mm:ss AM yyyymmdd                          $ECHO_C"
    at_xfail=no
    (
      echo "79. date.at:91: testing ..."
      $at_traceon


cp $testdir/simple.experr experr
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "date.at:95: blame -d'2:02:03 am 02-Feb-2002 UTC' \$testdir/simple,v"
echo date.at:95 >$at_check_line_file
( $at_traceon; blame -d'2:02:03 am 02-Feb-2002 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:96: blame -d'2:02:02 am 02-Feb-2002 UTC' \$testdir/simple,v"
echo date.at:96 >$at_check_line_file
( $at_traceon; blame -d'2:02:02 am 02-Feb-2002 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:96: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "date.at:99: blame -d'2:02:01 am 02-Feb-2002 UTC' \$testdir/simple,v"
echo date.at:99 >$at_check_line_file
( $at_traceon; blame -d'2:02:01 am 02-Feb-2002 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:99: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  80 ) # 80. date.at:102: Unusual timezone
    at_setup_line='date.at:102'
    at_desc='Unusual timezone'
    $at_quiet $ECHO_N " 80: Unusual timezone                             $ECHO_C"
    at_xfail=no
    (
      echo "80. date.at:102: testing ..."
      $at_traceon



cp $testdir/simple.experr experr
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "date.at:107: blame -d'11:02:03 am 02-Feb-2002 AWSST' \$testdir/simple,v"
echo date.at:107 >$at_check_line_file
( $at_traceon; blame -d'11:02:03 am 02-Feb-2002 AWSST' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:107: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:108: blame -d'04:02:02 am 02-Feb-2002 FWT' \$testdir/simple,v"
echo date.at:108 >$at_check_line_file
( $at_traceon; blame -d'04:02:02 am 02-Feb-2002 FWT' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:108: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:109: blame -d'09:32:02 pm 01-Feb-2002 -04:30' \$testdir/simple,v"
echo date.at:109 >$at_check_line_file
( $at_traceon; blame -d'09:32:02 pm 01-Feb-2002 -04:30' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:109: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "date.at:112: blame -d'09:32:01 pm 01-Feb-2002 -04:30' \$testdir/simple,v"
echo date.at:112 >$at_check_line_file
( $at_traceon; blame -d'09:32:01 pm 01-Feb-2002 -04:30' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:112: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  81 ) # 81. date.at:115: With -z or --zone option
    at_setup_line='date.at:115'
    at_desc='With -z or --zone option'
    $at_quiet $ECHO_N " 81: With -z or --zone option                     $ECHO_C"
    at_xfail=no
    (
      echo "81. date.at:115: testing ..."
      $at_traceon



cp $testdir/simple.experr experr
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "date.at:120: blame -d'11:02:03 am 02-Feb-2002' -z AWSST \$testdir/simple,v"
echo date.at:120 >$at_check_line_file
( $at_traceon; blame -d'11:02:03 am 02-Feb-2002' -z AWSST $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:120: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:121: blame -d'04:02:02 am 02-Feb-2002' -z FWT \$testdir/simple,v"
echo date.at:121 >$at_check_line_file
( $at_traceon; blame -d'04:02:02 am 02-Feb-2002' -z FWT $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:121: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "date.at:122: blame -d'09:32:02 pm 01-Feb-2002' -z -04:30 \$testdir/simple,v"
echo date.at:122 >$at_check_line_file
( $at_traceon; blame -d'09:32:02 pm 01-Feb-2002' -z -04:30 $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:122: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "date.at:125: blame -z -04:30 -d'09:32:01 pm 01-Feb-2002' \$testdir/simple,v"
echo date.at:125 >$at_check_line_file
( $at_traceon; blame -z -04:30 -d'09:32:01 pm 01-Feb-2002' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "date.at:125: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  82 ) # 82. date.at:128: Multiple dates
    at_setup_line='date.at:128'
    at_desc='Multiple dates'
    $at_quiet $ECHO_N " 82: Multiple dates                               $ECHO_C"
    at_xfail=no
    (
      echo "82. date.at:128: testing ..."
      $at_traceon



$at_traceoff
echo "date.at:131: blame -d'2001-01-01 01:01:01 UTC' -d'2002-02-02 02:02:02 UTC' \$testdir/simple,v"
echo date.at:131 >$at_check_line_file
( $at_traceon; blame -d'2001-01-01 01:01:01 UTC' -d'2002-02-02 02:02:02 UTC' $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "date.at:131: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-8 ) # Banner 8. state.at:1
    cat <<\_ATEOF

-s and --state options.

_ATEOF
    ;;

  83 ) # 83. state.at:3: Missing state argument
    at_setup_line='state.at:3'
    at_desc='Missing state argument'
    $at_quiet $ECHO_N " 83: Missing state argument                       $ECHO_C"
    at_xfail=no
    (
      echo "83. state.at:3: testing ..."
      $at_traceon



$at_traceoff
echo "state.at:6: blame \$testdir/simple,v -s"
echo state.at:6 >$at_check_line_file
( $at_traceon; blame $testdir/simple,v -s ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "state.at:6: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  84 ) # 84. state.at:10: Known state
    at_setup_line='state.at:10'
    at_desc='Known state'
    $at_quiet $ECHO_N " 84: Known state                                  $ECHO_C"
    at_xfail=no
    (
      echo "84. state.at:10: testing ..."
      $at_traceon


cp $testdir/simple.experr experr
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "state.at:14: blame -sExp \$testdir/simple,v"
echo state.at:14 >$at_check_line_file
( $at_traceon; blame -sExp $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "state.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "state.at:15: blame --state=Exp \$testdir/simple,v"
echo state.at:15 >$at_check_line_file
( $at_traceon; blame --state=Exp $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "state.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "state.at:18: blame -sStab \$testdir/simple,v"
echo state.at:18 >$at_check_line_file
( $at_traceon; blame -sStab $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "state.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "state.at:19: blame --state Stab \$testdir/simple,v"
echo state.at:19 >$at_check_line_file
( $at_traceon; blame --state Stab $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "state.at:19: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  85 ) # 85. state.at:22: Unknown state
    at_setup_line='state.at:22'
    at_desc='Unknown state'
    $at_quiet $ECHO_N " 85: Unknown state                                $ECHO_C"
    at_xfail=no
    (
      echo "85. state.at:22: testing ..."
      $at_traceon



$at_traceoff
echo "state.at:25: blame -sFloopy \$testdir/simple,v"
echo state.at:25 >$at_check_line_file
( $at_traceon; blame -sFloopy $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "state.at:25: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  86 ) # 86. state.at:29: Multiple states
    at_setup_line='state.at:29'
    at_desc='Multiple states'
    $at_quiet $ECHO_N " 86: Multiple states                              $ECHO_C"
    at_xfail=no
    (
      echo "86. state.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "state.at:32: blame -sStab -sExp \$testdir/simple,v"
echo state.at:32 >$at_check_line_file
( $at_traceon; blame -sStab -sExp $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "state.at:32: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-9 ) # Banner 9. author.at:1
    cat <<\_ATEOF

-w and --author options.

_ATEOF
    ;;

  87 ) # 87. author.at:3: No author
    at_setup_line='author.at:3'
    at_desc='No author'
    $at_quiet $ECHO_N " 87: No author                                    $ECHO_C"
    at_xfail=no
      test -z "$username" && at_xfail=yes
      test "$username" = username && at_xfail=yes
      test "$username" = somebody && at_xfail=yes
    (
      echo "87. author.at:3: testing ..."
      $at_traceon





replace="$username        "
replace="${replace:0:8}"
$at_traceoff
echo "author.at:10: blame -w -- \$testdir/simple,v"
echo author.at:10 >$at_check_line_file
( $at_traceon; blame -w -- $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "author.at:10: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

cat $testdir/simple,v | sed "s/somebody/$replace/g" > input,v
cat $testdir/simple-1.2.expout | sed "s/somebody/$replace/g" > expout
cat $testdir/simple.experr | sed "s/simple/input/g" > experr
$at_traceoff
echo "author.at:15: blame -w -- input,v"
echo author.at:15 >$at_check_line_file
( $at_traceon; blame -w -- input,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "author.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  88 ) # 88. author.at:18: Known author
    at_setup_line='author.at:18'
    at_desc='Known author'
    $at_quiet $ECHO_N " 88: Known author                                 $ECHO_C"
    at_xfail=no
    (
      echo "88. author.at:18: testing ..."
      $at_traceon


cp $testdir/simple.experr experr
cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "author.at:22: blame -wsomebody \$testdir/simple,v"
echo author.at:22 >$at_check_line_file
( $at_traceon; blame -wsomebody $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "author.at:22: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

rm -f expout
cp $testdir/simple-1.1.expout expout
$at_traceoff
echo "author.at:25: blame -wusername \$testdir/simple,v"
echo author.at:25 >$at_check_line_file
( $at_traceon; blame -wusername $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "author.at:25: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "author.at:26: blame --author=username \$testdir/simple,v"
echo author.at:26 >$at_check_line_file
( $at_traceon; blame --author=username $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "author.at:26: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  89 ) # 89. author.at:29: Unknown author
    at_setup_line='author.at:29'
    at_desc='Unknown author'
    $at_quiet $ECHO_N " 89: Unknown author                               $ECHO_C"
    at_xfail=no
    (
      echo "89. author.at:29: testing ..."
      $at_traceon



$at_traceoff
echo "author.at:32: blame -wfloopy \$testdir/simple,v"
echo author.at:32 >$at_check_line_file
( $at_traceon; blame -wfloopy $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "author.at:32: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  90 ) # 90. author.at:36: Multiple authors
    at_setup_line='author.at:36'
    at_desc='Multiple authors'
    $at_quiet $ECHO_N " 90: Multiple authors                             $ECHO_C"
    at_xfail=no
    (
      echo "90. author.at:36: testing ..."
      $at_traceon



$at_traceoff
echo "author.at:39: blame -wusername -wsomebody \$testdir/simple,v"
echo author.at:39 >$at_check_line_file
( $at_traceon; blame -wusername -wsomebody $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "author.at:39: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-10 ) # Banner 10. expand.at:1
    cat <<\_ATEOF

-k and --expand options.

_ATEOF
    ;;

  91 ) # 91. expand.at:3: Default substitutions
    at_setup_line='expand.at:3'
    at_desc='Default substitutions'
    $at_quiet $ECHO_N " 91: Default substitutions                        $ECHO_C"
    at_xfail=no
    (
      echo "91. expand.at:3: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2001/01/01 01:01:01 \$
1.1          (username 01-Jan-01): \$Header: $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
1.1          (username 01-Jan-01): \$Locker:  \$
1.1          (username 01-Jan-01): \$Log: keywords,v \$
1.1          (username 01-Jan-01): Revision 1.1  2001/01/01 01:01:01  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:23: blame \$testdir/keywords,v"
echo expand.at:23 >$at_check_line_file
( $at_traceon; blame $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:23: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  92 ) # 92. expand.at:26: Default substitutions, with timezone
    at_setup_line='expand.at:26'
    at_desc='Default substitutions, with timezone'
    $at_quiet $ECHO_N " 92: Default substitutions, with timezone         $ECHO_C"
    at_xfail=no
    (
      echo "92. expand.at:26: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2000-12-31 20:01:01-05 \$
1.1          (username 01-Jan-01): \$Header: $testdir/keywords,v 1.1 2000-12-31 20:01:01-05 username Exp \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2000-12-31 20:01:01-05 username Exp \$
1.1          (username 01-Jan-01): \$Locker:  \$
1.1          (username 01-Jan-01): \$Log: keywords,v \$
1.1          (username 01-Jan-01): Revision 1.1  2000-12-31 20:01:01-05  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:46: blame -zEST \$testdir/keywords,v"
echo expand.at:46 >$at_check_line_file
( $at_traceon; blame -zEST $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  93 ) # 93. expand.at:49: Missing keyword substitution argument
    at_setup_line='expand.at:49'
    at_desc='Missing keyword substitution argument'
    $at_quiet $ECHO_N " 93: Missing keyword substitution argument        $ECHO_C"
    at_xfail=no
    (
      echo "93. expand.at:49: testing ..."
      $at_traceon



$at_traceoff
echo "expand.at:52: blame \$testdir/keywords,v -k"
echo expand.at:52 >$at_check_line_file
( $at_traceon; blame $testdir/keywords,v -k ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "expand.at:52: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  94 ) # 94. expand.at:56: Keys and values (-kkv)
    at_setup_line='expand.at:56'
    at_desc='Keys and values (-kkv)'
    $at_quiet $ECHO_N " 94: Keys and values (-kkv)                       $ECHO_C"
    at_xfail=no
    (
      echo "94. expand.at:56: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2001/01/01 01:01:01 \$
1.1          (username 01-Jan-01): \$Header: $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
1.1          (username 01-Jan-01): \$Locker:  \$
1.1          (username 01-Jan-01): \$Log: keywords,v \$
1.1          (username 01-Jan-01): Revision 1.1  2001/01/01 01:01:01  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:76: blame -kkv \$testdir/keywords,v"
echo expand.at:76 >$at_check_line_file
( $at_traceon; blame -kkv $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:76: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "expand.at:77: blame --expand=kv \$testdir/keywords,v"
echo expand.at:77 >$at_check_line_file
( $at_traceon; blame --expand=kv $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:77: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "expand.at:78: blame --expand kv \$testdir/keywords,v"
echo expand.at:78 >$at_check_line_file
( $at_traceon; blame --expand kv $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:78: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  95 ) # 95. expand.at:81: Keys, values and locker (-kkvl)
    at_setup_line='expand.at:81'
    at_desc='Keys, values and locker (-kkvl)'
    $at_quiet $ECHO_N " 95: Keys, values and locker (-kkvl)              $ECHO_C"
    at_xfail=no
    (
      echo "95. expand.at:81: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2001/01/01 01:01:01 \$
1.1          (username 01-Jan-01): \$Header: $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp username \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2001/01/01 01:01:01 username Exp username \$
1.1          (username 01-Jan-01): \$Locker: username \$
1.1          (username 01-Jan-01): \$Log: keywords,v \$
1.1          (username 01-Jan-01): Revision 1.1  2001/01/01 01:01:01  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:101: blame -kkvl \$testdir/keywords,v"
echo expand.at:101 >$at_check_line_file
( $at_traceon; blame -kkvl $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  96 ) # 96. expand.at:104: Keys only (-kk)
    at_setup_line='expand.at:104'
    at_desc='Keys only (-kk)'
    $at_quiet $ECHO_N " 96: Keys only (-kk)                              $ECHO_C"
    at_xfail=no
    (
      echo "96. expand.at:104: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author\$
1.1          (username 01-Jan-01): \$Date\$
1.1          (username 01-Jan-01): \$Header\$
1.1          (username 01-Jan-01): \$Id\$
1.1          (username 01-Jan-01): \$Locker\$
1.1          (username 01-Jan-01): \$Log\$
1.1          (username 01-Jan-01): Revision 1.1  2001/01/01 01:01:01  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): \$Name\$
1.1          (username 01-Jan-01): \$RCSfile\$
1.1          (username 01-Jan-01): \$Revision\$
1.1          (username 01-Jan-01): \$Source\$
1.1          (username 01-Jan-01): \$State\$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:124: blame -kk \$testdir/keywords,v"
echo expand.at:124 >$at_check_line_file
( $at_traceon; blame -kk $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:124: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  97 ) # 97. expand.at:127: Old keywords strings (-ko)
    at_setup_line='expand.at:127'
    at_desc='Old keywords strings (-ko)'
    $at_quiet $ECHO_N " 97: Old keywords strings (-ko)                   $ECHO_C"
    at_xfail=no
    (
      echo "97. expand.at:127: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author\$
1.1          (username 01-Jan-01): \$Date\$
1.1          (username 01-Jan-01): \$Header\$
1.1          (username 01-Jan-01): \$Id\$
1.1          (username 01-Jan-01): \$Locker\$
1.1          (username 01-Jan-01): \$Log\$
1.1          (username 01-Jan-01): \$Name\$
1.1          (username 01-Jan-01): \$RCSfile\$
1.1          (username 01-Jan-01): \$Revision\$
1.1          (username 01-Jan-01): \$Source\$
1.1          (username 01-Jan-01): \$State\$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:144: blame -ko \$testdir/keywords,v"
echo expand.at:144 >$at_check_line_file
( $at_traceon; blame -ko $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:144: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  98 ) # 98. expand.at:147: Binary image of old keywords strings (-kb)
    at_setup_line='expand.at:147'
    at_desc='Binary image of old keywords strings (-kb)'
    $at_quiet $ECHO_N " 98: Binary image of old keywords strings (-kb)   $ECHO_C"
    at_xfail=no
    (
      echo "98. expand.at:147: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author\$
1.1          (username 01-Jan-01): \$Date\$
1.1          (username 01-Jan-01): \$Header\$
1.1          (username 01-Jan-01): \$Id\$
1.1          (username 01-Jan-01): \$Locker\$
1.1          (username 01-Jan-01): \$Log\$
1.1          (username 01-Jan-01): \$Name\$
1.1          (username 01-Jan-01): \$RCSfile\$
1.1          (username 01-Jan-01): \$Revision\$
1.1          (username 01-Jan-01): \$Source\$
1.1          (username 01-Jan-01): \$State\$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:164: blame -kb \$testdir/keywords,v"
echo expand.at:164 >$at_check_line_file
( $at_traceon; blame -kb $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:164: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  99 ) # 99. expand.at:167: Values only (-kv)
    at_setup_line='expand.at:167'
    at_desc='Values only (-kv)'
    $at_quiet $ECHO_N " 99: Values only (-kv)                            $ECHO_C"
    at_xfail=no
    (
      echo "99. expand.at:167: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): username
1.1          (username 01-Jan-01): 2001/01/01 01:01:01
1.1          (username 01-Jan-01): $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp
1.1          (username 01-Jan-01): keywords,v 1.1 2001/01/01 01:01:01 username Exp
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): keywords,v
1.1          (username 01-Jan-01): Revision 1.1  2001/01/01 01:01:01  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): keywords,v
1.1          (username 01-Jan-01): 1.1
1.1          (username 01-Jan-01): $testdir/keywords,v
1.1          (username 01-Jan-01): Exp
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "expand.at:187: blame -kv \$testdir/keywords,v"
echo expand.at:187 >$at_check_line_file
( $at_traceon; blame -kv $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "expand.at:187: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  100 ) # 100. expand.at:190: Multiple substitution types
    at_setup_line='expand.at:190'
    at_desc='Multiple substitution types'
    $at_quiet $ECHO_N "100: Multiple substitution types                  $ECHO_C"
    at_xfail=no
    (
      echo "100. expand.at:190: testing ..."
      $at_traceon



$at_traceoff
echo "expand.at:193: blame -ko -kkvl \$testdir/simple,v"
echo expand.at:193 >$at_check_line_file
( $at_traceon; blame -ko -kkvl $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "expand.at:193: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-11 ) # Banner 11. version.at:1
    cat <<\_ATEOF

-V and --version options.

_ATEOF
    ;;

  101 ) # 101. version.at:3: Invalid version argument
    at_setup_line='version.at:3'
    at_desc='Invalid version argument'
    $at_quiet $ECHO_N "101: Invalid version argument                     $ECHO_C"
    at_xfail=no
    (
      echo "101. version.at:3: testing ..."
      $at_traceon



$at_traceoff
echo "version.at:6: blame -V1 \$testdir/keywords,v"
echo version.at:6 >$at_check_line_file
( $at_traceon; blame -V1 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "version.at:6: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "version.at:8: blame --version=foo \$testdir/keywords,v"
echo version.at:8 >$at_check_line_file
( $at_traceon; blame --version=foo $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "version.at:8: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  102 ) # 102. version.at:12: Emulating RCS version 3
    at_setup_line='version.at:12'
    at_desc='Emulating RCS version 3'
    $at_quiet $ECHO_N "102: Emulating RCS version 3                      $ECHO_C"
    at_xfail=no
    (
      echo "102. version.at:12: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2001/01/01 01:01:01 \$
1.1          (username 01-Jan-01): \$Header: keywords,v 1.1 2001/01/01 01:01:01 username Locked \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2001/01/01 01:01:01 username Locked \$
1.1          (username 01-Jan-01): \$Locker: username \$
1.1          (username 01-Jan-01): \$Log:	keywords,v \$
1.1          (username 01-Jan-01): # Revision 1.1  2001/01/01  01:01:01  username
1.1          (username 01-Jan-01): # Initial revision
1.1          (username 01-Jan-01): #$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "version.at:32: blame -V3 \$testdir/keywords,v"
echo version.at:32 >$at_check_line_file
( $at_traceon; blame -V3 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "version.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "version.at:33: blame --version=3 \$testdir/keywords,v"
echo version.at:33 >$at_check_line_file
( $at_traceon; blame --version=3 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "version.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  103 ) # 103. version.at:36: Emulating RCS version 4
    at_setup_line='version.at:36'
    at_desc='Emulating RCS version 4'
    $at_quiet $ECHO_N "103: Emulating RCS version 4                      $ECHO_C"
    at_xfail=no
    (
      echo "103. version.at:36: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2001/01/01 01:01:01 \$
1.1          (username 01-Jan-01): \$Header: $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp Locker: username \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2001/01/01 01:01:01 username Exp Locker: username \$
1.1          (username 01-Jan-01): \$Locker: username \$
1.1          (username 01-Jan-01): \$Log:	keywords,v \$
1.1          (username 01-Jan-01): # Revision 1.1  2001/01/01  01:01:01  username
1.1          (username 01-Jan-01): # Initial revision
1.1          (username 01-Jan-01): #$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "version.at:56: blame -V4 \$testdir/keywords,v"
echo version.at:56 >$at_check_line_file
( $at_traceon; blame -V4 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "version.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "version.at:57: blame --version=4 \$testdir/keywords,v"
echo version.at:57 >$at_check_line_file
( $at_traceon; blame --version=4 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "version.at:57: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  104 ) # 104. version.at:60: Emulating RCS version 5
    at_setup_line='version.at:60'
    at_desc='Emulating RCS version 5'
    $at_quiet $ECHO_N "104: Emulating RCS version 5                      $ECHO_C"
    at_xfail=no
    (
      echo "104. version.at:60: testing ..."
      $at_traceon



cat <<EOF > expout
1.1          (username 01-Jan-01): \$Author: username \$
1.1          (username 01-Jan-01): \$Date: 2001/01/01 01:01:01 \$
1.1          (username 01-Jan-01): \$Header: $testdir/keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
1.1          (username 01-Jan-01): \$Id: keywords,v 1.1 2001/01/01 01:01:01 username Exp \$
1.1          (username 01-Jan-01): \$Locker:  \$
1.1          (username 01-Jan-01): \$Log: keywords,v \$
1.1          (username 01-Jan-01): Revision 1.1  2001/01/01 01:01:01  username
1.1          (username 01-Jan-01): Initial revision
1.1          (username 01-Jan-01):$space
1.1          (username 01-Jan-01): \$Name:  \$
1.1          (username 01-Jan-01): \$RCSfile: keywords,v \$
1.1          (username 01-Jan-01): \$Revision: 1.1 \$
1.1          (username 01-Jan-01): \$Source: $testdir/keywords,v \$
1.1          (username 01-Jan-01): \$State: Exp \$
EOF
cp $testdir/keywords.experr experr
$at_traceoff
echo "version.at:80: blame -V5 \$testdir/keywords,v"
echo version.at:80 >$at_check_line_file
( $at_traceon; blame -V5 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "version.at:80: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "version.at:81: blame --version=5 \$testdir/keywords,v"
echo version.at:81 >$at_check_line_file
( $at_traceon; blame --version=5 $testdir/keywords,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "version.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-12 ) # Banner 12. suffixes.at:1
    cat <<\_ATEOF

-x and --suffixes options.

_ATEOF
    ;;

  105 ) # 105. suffixes.at:3: Default suffixes
    at_setup_line='suffixes.at:3'
    at_desc='Default suffixes'
    $at_quiet $ECHO_N "105: Default suffixes                             $ECHO_C"
    at_xfail=no
    (
      echo "105. suffixes.at:3: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "suffixes.at:6: blame \$testdir/file1"
echo suffixes.at:6 >$at_check_line_file
( $at_traceon; blame $testdir/file1 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "suffixes.at:6: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  106 ) # 106. suffixes.at:9: Nonstandard suffixes
    at_setup_line='suffixes.at:9'
    at_desc='Nonstandard suffixes'
    $at_quiet $ECHO_N "106: Nonstandard suffixes                         $ECHO_C"
    at_xfail=no
    (
      echo "106. suffixes.at:9: testing ..."
      $at_traceon


cp $testdir/simple-1.2.expout expout
$at_traceoff
echo "suffixes.at:12: blame -x\$slash-foo\$slash-bar \$testdir/file2"
echo suffixes.at:12 >$at_check_line_file
( $at_traceon; blame -x$slash-foo$slash-bar $testdir/file2 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "suffixes.at:12: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "suffixes.at:13: blame --suffixes=\$slash-foo\$slash-bar \$testdir/file3"
echo suffixes.at:13 >$at_check_line_file
( $at_traceon; blame --suffixes=$slash-foo$slash-bar $testdir/file3 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "suffixes.at:13: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "suffixes.at:14: blame --suffixes \$slash-foo\$slash-bar \$testdir/file3"
echo suffixes.at:14 >$at_check_line_file
( $at_traceon; blame --suffixes $slash-foo$slash-bar $testdir/file3 ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; cat $at_stderr
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "suffixes.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  107 ) # 107. suffixes.at:17: Multiple suffixes specifications
    at_setup_line='suffixes.at:17'
    at_desc='Multiple suffixes specifications'
    $at_quiet $ECHO_N "107: Multiple suffixes specifications             $ECHO_C"
    at_xfail=no
    (
      echo "107. suffixes.at:17: testing ..."
      $at_traceon



$at_traceoff
echo "suffixes.at:20: blame -x\$slash-foo\$slash-bar -x\$slash-bar\$slash-foo \$testdir/simple,v"
echo suffixes.at:20 >$at_check_line_file
( $at_traceon; blame -x$slash-foo$slash-bar -x$slash-bar$slash-foo $testdir/simple,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "suffixes.at:20: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-13 ) # Banner 13. mixed.at:1
    cat <<\_ATEOF

Mixing -r, -d, -s and -w options.

_ATEOF
    ;;

  108 ) # 108. mixed.at:3: Valid -r and -d combo
    at_setup_line='mixed.at:3'
    at_desc='Valid -r and -d combo'
    $at_quiet $ECHO_N "108: Valid -r and -d combo                        $ECHO_C"
    at_xfail=no
    (
      echo "108. mixed.at:3: testing ..."
      $at_traceon




cp $testdir/complex-3.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:9: blame -r3.4 -d'2001/01/01 03:04:01' \$testdir/complex,v"
echo mixed.at:9 >$at_check_line_file
( $at_traceon; blame -r3.4 -d'2001/01/01 03:04:01' $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:9: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "mixed.at:10: blame -r3.4 -d'2001/01/01 03:04:00' \$testdir/complex,v"
echo mixed.at:10 >$at_check_line_file
( $at_traceon; blame -r3.4 -d'2001/01/01 03:04:00' $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:10: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  109 ) # 109. mixed.at:13: Invalid -r and -d combo
    at_setup_line='mixed.at:13'
    at_desc='Invalid -r and -d combo'
    $at_quiet $ECHO_N "109: Invalid -r and -d combo                      $ECHO_C"
    at_xfail=no
    (
      echo "109. mixed.at:13: testing ..."
      $at_traceon





$at_traceoff
echo "mixed.at:18: blame -r3.4 -d'2001/01/01 03:03:59' \$testdir/complex,v"
echo mixed.at:18 >$at_check_line_file
( $at_traceon; blame -r3.4 -d'2001/01/01 03:03:59' $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:18: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  110 ) # 110. mixed.at:22: Valid -r and -s combo
    at_setup_line='mixed.at:22'
    at_desc='Valid -r and -s combo'
    $at_quiet $ECHO_N "110: Valid -r and -s combo                        $ECHO_C"
    at_xfail=no
    (
      echo "110. mixed.at:22: testing ..."
      $at_traceon




cp $testdir/complex-3.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:28: blame -r3.4 -sA \$testdir/complex,v"
echo mixed.at:28 >$at_check_line_file
( $at_traceon; blame -r3.4 -sA $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  111 ) # 111. mixed.at:31: Invalid -r and -s combo
    at_setup_line='mixed.at:31'
    at_desc='Invalid -r and -s combo'
    $at_quiet $ECHO_N "111: Invalid -r and -s combo                      $ECHO_C"
    at_xfail=no
    (
      echo "111. mixed.at:31: testing ..."
      $at_traceon





$at_traceoff
echo "mixed.at:36: blame -r3.4 -sB \$testdir/complex,v"
echo mixed.at:36 >$at_check_line_file
( $at_traceon; blame -r3.4 -sB $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:36: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  112 ) # 112. mixed.at:40: Valid -r and -w combo
    at_setup_line='mixed.at:40'
    at_desc='Valid -r and -w combo'
    $at_quiet $ECHO_N "112: Valid -r and -w combo                        $ECHO_C"
    at_xfail=no
    (
      echo "112. mixed.at:40: testing ..."
      $at_traceon




cp $testdir/complex-3.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:46: blame -r3.4 -wuser1 \$testdir/complex,v"
echo mixed.at:46 >$at_check_line_file
( $at_traceon; blame -r3.4 -wuser1 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:46: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  113 ) # 113. mixed.at:49: Invalid -r and -w combo
    at_setup_line='mixed.at:49'
    at_desc='Invalid -r and -w combo'
    $at_quiet $ECHO_N "113: Invalid -r and -w combo                      $ECHO_C"
    at_xfail=no
    (
      echo "113. mixed.at:49: testing ..."
      $at_traceon





$at_traceoff
echo "mixed.at:54: blame -r3.4 -wuser2 \$testdir/complex,v"
echo mixed.at:54 >$at_check_line_file
( $at_traceon; blame -r3.4 -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:54: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  114 ) # 114. mixed.at:58: Valid -d and -s combo
    at_setup_line='mixed.at:58'
    at_desc='Valid -d and -s combo'
    $at_quiet $ECHO_N "114: Valid -d and -s combo                        $ECHO_C"
    at_xfail=no
    (
      echo "114. mixed.at:58: testing ..."
      $at_traceon




cp $testdir/complex-1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:64: blame -d'2001/01/01 01:01:00' -sA \$testdir/complex,v"
echo mixed.at:64 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:01:00' -sA $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:64: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "mixed.at:65: blame -d'2001/01/01 01:01:30' -sA \$testdir/complex,v"
echo mixed.at:65 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:01:30' -sA $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:65: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  115 ) # 115. mixed.at:68: Invalid -d and -s combo
    at_setup_line='mixed.at:68'
    at_desc='Invalid -d and -s combo'
    $at_quiet $ECHO_N "115: Invalid -d and -s combo                      $ECHO_C"
    at_xfail=no
    (
      echo "115. mixed.at:68: testing ..."
      $at_traceon





$at_traceoff
echo "mixed.at:73: blame -d'2001/01/01 01:01:30' -sB \$testdir/complex,v"
echo mixed.at:73 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:01:30' -sB $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:73: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  116 ) # 116. mixed.at:77: Valid -d and -w combo
    at_setup_line='mixed.at:77'
    at_desc='Valid -d and -w combo'
    $at_quiet $ECHO_N "116: Valid -d and -w combo                        $ECHO_C"
    at_xfail=no
    (
      echo "116. mixed.at:77: testing ..."
      $at_traceon




cp $testdir/complex-1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:83: blame -d'2001/01/01 01:01:00' -wuser3 \$testdir/complex,v"
echo mixed.at:83 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:01:00' -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:83: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "mixed.at:84: blame -d'2001/01/01 01:01:30' -wuser3 \$testdir/complex,v"
echo mixed.at:84 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:01:30' -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:84: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  117 ) # 117. mixed.at:87: Invalid -d and -w combo
    at_setup_line='mixed.at:87'
    at_desc='Invalid -d and -w combo'
    $at_quiet $ECHO_N "117: Invalid -d and -w combo                      $ECHO_C"
    at_xfail=no
    (
      echo "117. mixed.at:87: testing ..."
      $at_traceon





$at_traceoff
echo "mixed.at:92: blame -d'2001/01/01 01:01:30' -wuser2 \$testdir/complex,v"
echo mixed.at:92 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:01:30' -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:92: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  118 ) # 118. mixed.at:96: Valid -s and -w combo
    at_setup_line='mixed.at:96'
    at_desc='Valid -s and -w combo'
    $at_quiet $ECHO_N "118: Valid -s and -w combo                        $ECHO_C"
    at_xfail=no
    (
      echo "118. mixed.at:96: testing ..."
      $at_traceon




cp $testdir/complex-1.1.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:102: blame -sA -wuser3 \$testdir/complex,v"
echo mixed.at:102 >$at_check_line_file
( $at_traceon; blame -sA -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:102: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  119 ) # 119. mixed.at:105: Invalid -s and -w combo
    at_setup_line='mixed.at:105'
    at_desc='Invalid -s and -w combo'
    $at_quiet $ECHO_N "119: Invalid -s and -w combo                      $ECHO_C"
    at_xfail=no
    (
      echo "119. mixed.at:105: testing ..."
      $at_traceon





$at_traceoff
echo "mixed.at:110: blame -sC -wuser2 \$testdir/complex,v"
echo mixed.at:110 >$at_check_line_file
( $at_traceon; blame -sC -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:110: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  120 ) # 120. mixed.at:114: Valid -r, -d and -s combo
    at_setup_line='mixed.at:114'
    at_desc='Valid -r, -d and -s combo'
    $at_quiet $ECHO_N "120: Valid -r, -d and -s combo                    $ECHO_C"
    at_xfail=no
    (
      echo "120. mixed.at:114: testing ..."
      $at_traceon





cp $testdir/complex-2.2.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:121: blame -r2.2 -d'2001/01/01 03:10:00' -sC \$testdir/complex,v"
echo mixed.at:121 >$at_check_line_file
( $at_traceon; blame -r2.2 -d'2001/01/01 03:10:00' -sC $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:121: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  121 ) # 121. mixed.at:124: Invalid -r, -d and -s combo
    at_setup_line='mixed.at:124'
    at_desc='Invalid -r, -d and -s combo'
    $at_quiet $ECHO_N "121: Invalid -r, -d and -s combo                  $ECHO_C"
    at_xfail=no
    (
      echo "121. mixed.at:124: testing ..."
      $at_traceon






$at_traceoff
echo "mixed.at:130: blame -r2.1 -d'2001/01/01 03:10:00' -sC \$testdir/complex,v"
echo mixed.at:130 >$at_check_line_file
( $at_traceon; blame -r2.1 -d'2001/01/01 03:10:00' -sC $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:130: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:132: blame -r2.2 -d'2001/01/01 01:10:00' -sC \$testdir/complex,v"
echo mixed.at:132 >$at_check_line_file
( $at_traceon; blame -r2.2 -d'2001/01/01 01:10:00' -sC $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:132: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:134: blame -r2.2 -d'2001/01/01 03:10:00' -sA \$testdir/complex,v"
echo mixed.at:134 >$at_check_line_file
( $at_traceon; blame -r2.2 -d'2001/01/01 03:10:00' -sA $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:134: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  122 ) # 122. mixed.at:138: Valid -r, -d and -w combo
    at_setup_line='mixed.at:138'
    at_desc='Valid -r, -d and -w combo'
    $at_quiet $ECHO_N "122: Valid -r, -d and -w combo                    $ECHO_C"
    at_xfail=no
    (
      echo "122. mixed.at:138: testing ..."
      $at_traceon





cp $testdir/complex-2.2.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:145: blame -r2.2 -d'2001/01/01 03:10:00' -wuser3 \$testdir/complex,v"
echo mixed.at:145 >$at_check_line_file
( $at_traceon; blame -r2.2 -d'2001/01/01 03:10:00' -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:145: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  123 ) # 123. mixed.at:148: Invalid -r, -d and -w combo
    at_setup_line='mixed.at:148'
    at_desc='Invalid -r, -d and -w combo'
    $at_quiet $ECHO_N "123: Invalid -r, -d and -w combo                  $ECHO_C"
    at_xfail=no
    (
      echo "123. mixed.at:148: testing ..."
      $at_traceon






$at_traceoff
echo "mixed.at:154: blame -r2.1 -d'2001/01/01 03:10:00' -wuser3 \$testdir/complex,v"
echo mixed.at:154 >$at_check_line_file
( $at_traceon; blame -r2.1 -d'2001/01/01 03:10:00' -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:154: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:156: blame -r2.2 -d'2001/01/01 01:10:00' -wuser3 \$testdir/complex,v"
echo mixed.at:156 >$at_check_line_file
( $at_traceon; blame -r2.2 -d'2001/01/01 01:10:00' -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:156: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:158: blame -r2.2 -d'2001/01/01 03:10:00' -wuser2 \$testdir/complex,v"
echo mixed.at:158 >$at_check_line_file
( $at_traceon; blame -r2.2 -d'2001/01/01 03:10:00' -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:158: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  124 ) # 124. mixed.at:162: Valid -r, -s and -w combo
    at_setup_line='mixed.at:162'
    at_desc='Valid -r, -s and -w combo'
    $at_quiet $ECHO_N "124: Valid -r, -s and -w combo                    $ECHO_C"
    at_xfail=no
    (
      echo "124. mixed.at:162: testing ..."
      $at_traceon





cp $testdir/complex-2.2.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:169: blame -r2.2 -sC -wuser3 \$testdir/complex,v"
echo mixed.at:169 >$at_check_line_file
( $at_traceon; blame -r2.2 -sC -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:169: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  125 ) # 125. mixed.at:172: Invalid -r, -s and -w combo
    at_setup_line='mixed.at:172'
    at_desc='Invalid -r, -s and -w combo'
    $at_quiet $ECHO_N "125: Invalid -r, -s and -w combo                  $ECHO_C"
    at_xfail=no
    (
      echo "125. mixed.at:172: testing ..."
      $at_traceon






$at_traceoff
echo "mixed.at:178: blame -r2.1 -sC -wuser3 \$testdir/complex,v"
echo mixed.at:178 >$at_check_line_file
( $at_traceon; blame -r2.1 -sC -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:178: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:180: blame -r2.2 -sA -wuser3 \$testdir/complex,v"
echo mixed.at:180 >$at_check_line_file
( $at_traceon; blame -r2.2 -sA -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:180: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:182: blame -r2.2 -sC -wuser2 \$testdir/complex,v"
echo mixed.at:182 >$at_check_line_file
( $at_traceon; blame -r2.2 -sC -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:182: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  126 ) # 126. mixed.at:186: Valid -d, -s and -w combo
    at_setup_line='mixed.at:186'
    at_desc='Valid -d, -s and -w combo'
    $at_quiet $ECHO_N "126: Valid -d, -s and -w combo                    $ECHO_C"
    at_xfail=no
    (
      echo "126. mixed.at:186: testing ..."
      $at_traceon





cp $testdir/complex-1.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:193: blame -d'2001/01/01 01:10:00' -sB -wuser3 \$testdir/complex,v"
echo mixed.at:193 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:10:00' -sB -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:193: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  127 ) # 127. mixed.at:196: Invalid -d, -s and -w combo
    at_setup_line='mixed.at:196'
    at_desc='Invalid -d, -s and -w combo'
    $at_quiet $ECHO_N "127: Invalid -d, -s and -w combo                  $ECHO_C"
    at_xfail=no
    (
      echo "127. mixed.at:196: testing ..."
      $at_traceon






$at_traceoff
echo "mixed.at:202: blame -d'2001/01/01 01:02:30' -sB -wuser3 \$testdir/complex,v"
echo mixed.at:202 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:02:30' -sB -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:202: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:204: blame -d'2001/01/01 01:10:00' -sC -wuser3 \$testdir/complex,v"
echo mixed.at:204 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:10:00' -sC -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:204: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:206: blame -d'2001/01/01 01:10:00' -sB -wuser2 \$testdir/complex,v"
echo mixed.at:206 >$at_check_line_file
( $at_traceon; blame -d'2001/01/01 01:10:00' -sB -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:206: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  128 ) # 128. mixed.at:210: Valid -r, -d, -s and -w combo
    at_setup_line='mixed.at:210'
    at_desc='Valid -r, -d, -s and -w combo'
    $at_quiet $ECHO_N "128: Valid -r, -d, -s and -w combo                $ECHO_C"
    at_xfail=no
    (
      echo "128. mixed.at:210: testing ..."
      $at_traceon






cp $testdir/complex-1.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "mixed.at:218: blame -r1.4 -d'2001/01/01 01:10:00' -sB -wuser3 \$testdir/complex,v"
echo mixed.at:218 >$at_check_line_file
( $at_traceon; blame -r1.4 -d'2001/01/01 01:10:00' -sB -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mixed.at:218: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  129 ) # 129. mixed.at:221: Invalid -r, -d, -s and -w combo
    at_setup_line='mixed.at:221'
    at_desc='Invalid -r, -d, -s and -w combo'
    $at_quiet $ECHO_N "129: Invalid -r, -d, -s and -w combo              $ECHO_C"
    at_xfail=no
    (
      echo "129. mixed.at:221: testing ..."
      $at_traceon







$at_traceoff
echo "mixed.at:228: blame -r1.3 -d'2001/01/01 01:10:00' -sB -wuser3 \$testdir/complex,v"
echo mixed.at:228 >$at_check_line_file
( $at_traceon; blame -r1.3 -d'2001/01/01 01:10:00' -sB -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:228: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:230: blame -r1.4 -d'2001/01/01 01:02:30' -sB -wuser3 \$testdir/complex,v"
echo mixed.at:230 >$at_check_line_file
( $at_traceon; blame -r1.4 -d'2001/01/01 01:02:30' -sB -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:230: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:232: blame -r1.4 -d'2001/01/01 01:10:00' -sC -wuser3 \$testdir/complex,v"
echo mixed.at:232 >$at_check_line_file
( $at_traceon; blame -r1.4 -d'2001/01/01 01:10:00' -sC -wuser3 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:232: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

$at_traceoff
echo "mixed.at:234: blame -r1.4 -d'2001/01/01 01:10:00' -sB -wuser2 \$testdir/complex,v"
echo mixed.at:234 >$at_check_line_file
( $at_traceon; blame -r1.4 -d'2001/01/01 01:10:00' -sB -wuser2 $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "mixed.at:234: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-14 ) # Banner 14. log.at:1
    cat <<\_ATEOF

Expanding Log keywords.

_ATEOF
    ;;

  130 ) # 130. log.at:3: Old Log expansion format
    at_setup_line='log.at:3'
    at_desc='Old Log expansion format'
    $at_quiet $ECHO_N "130: Old Log expansion format                     $ECHO_C"
    at_xfail=no
    (
      echo "130. log.at:3: testing ..."
      $at_traceon



cp $testdir/log-v3.expout expout
cp $testdir/log.experr experr
$at_traceoff
echo "log.at:8: blame -V3 \$testdir/log,v"
echo log.at:8 >$at_check_line_file
( $at_traceon; blame -V3 $testdir/log,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "log.at:8: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  131 ) # 131. log.at:11: New Log expansion format
    at_setup_line='log.at:11'
    at_desc='New Log expansion format'
    $at_quiet $ECHO_N "131: New Log expansion format                     $ECHO_C"
    at_xfail=no
    (
      echo "131. log.at:11: testing ..."
      $at_traceon


cp $testdir/log-v5.expout expout
cp $testdir/log.experr experr
$at_traceoff
echo "log.at:15: blame \$testdir/log,v"
echo log.at:15 >$at_check_line_file
( $at_traceon; blame $testdir/log,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "log.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  banner-15 ) # Banner 15. rcsinit.at:1
    cat <<\_ATEOF

RCSINIT environment variable support.

_ATEOF
    ;;

  132 ) # 132. rcsinit.at:3: Empty RCSINIT
    at_setup_line='rcsinit.at:3'
    at_desc='Empty RCSINIT'
    $at_quiet $ECHO_N "132: Empty RCSINIT                                $ECHO_C"
    at_xfail=no
    (
      echo "132. rcsinit.at:3: testing ..."
      $at_traceon




cp $testdir/complex-3.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "rcsinit.at:9: RCSINIT= blame -r3.4 -sA \$testdir/complex,v"
echo rcsinit.at:9 >$at_check_line_file
( $at_traceon; RCSINIT= blame -r3.4 -sA $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rcsinit.at:9: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  133 ) # 133. rcsinit.at:12: RCSINIT with options
    at_setup_line='rcsinit.at:12'
    at_desc='RCSINIT with options'
    $at_quiet $ECHO_N "133: RCSINIT with options                         $ECHO_C"
    at_xfail=no
    (
      echo "133. rcsinit.at:12: testing ..."
      $at_traceon




cp $testdir/complex-3.4.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "rcsinit.at:18: RCSINIT='-r3.4 -sA' blame \$testdir/complex,v"
echo rcsinit.at:18 >$at_check_line_file
( $at_traceon; RCSINIT='-r3.4 -sA' blame $testdir/complex,v ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rcsinit.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  134 ) # 134. rcsinit.at:21: RCSINIT with invalid options
    at_setup_line='rcsinit.at:21'
    at_desc='RCSINIT with invalid options'
    $at_quiet $ECHO_N "134: RCSINIT with invalid options                 $ECHO_C"
    at_xfail=no
    (
      echo "134. rcsinit.at:21: testing ..."
      $at_traceon



$at_traceoff
echo "rcsinit.at:24: RCSINIT='--foo' blame"
echo rcsinit.at:24 >$at_check_line_file
( $at_traceon; RCSINIT='--foo' blame ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo stderr:; tee stderr <$at_stderr
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "rcsinit.at:24: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


if $at_diff $at_devnull stderr; then
	echo 1 > $at_status_file
	exit 1
fi

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  135 ) # 135. rcsinit.at:28: RCSINIT with a filename
    at_setup_line='rcsinit.at:28'
    at_desc='RCSINIT with a filename'
    $at_quiet $ECHO_N "135: RCSINIT with a filename                      $ECHO_C"
    at_xfail=no
    (
      echo "135. rcsinit.at:28: testing ..."
      $at_traceon


cp $testdir/complex-3.8.expout expout
cp $testdir/complex.experr experr
$at_traceoff
echo "rcsinit.at:32: RCSINIT=\"\$testdir/complex,v\" blame"
echo rcsinit.at:32 >$at_check_line_file
( $at_traceon; RCSINIT="$testdir/complex,v" blame ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff experr $at_stderr || at_failed=:
$at_diff expout $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "rcsinit.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  * )
    echo "$as_me: no such test group: $at_group" >&2
    continue
    ;;
  esac

  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd $at_suite_dir

  case $at_group in
    banner-*) ;;
    *)
      if test ! -f $at_check_line_file; then
	sed "s/^ */$as_me: warning: /" <<_ATEOF
	A failure happened in a test group before any test could be
	run. This means that test suite is improperly designed.  Please
	report this failure to <foonly@users.sourceforge.net>.
_ATEOF
    	echo "$at_setup_line" >$at_check_line_file
      fi
      at_group_count=`expr 1 + $at_group_count`
      $at_verbose $ECHO_N "$at_group. $at_setup_line: $ECHO_C"
      echo $ECHO_N "$at_group. $at_setup_line: $ECHO_C" >> $at_group_log
      case $at_xfail:$at_status in
	yes:0)
	    at_msg="UNEXPECTED PASS"
	    at_xpass_list="$at_xpass_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
	no:0)
	    at_msg="ok"
	    at_pass_list="$at_pass_list $at_group"
	    at_errexit=false
	    ;;
	*:77)
	    at_msg="skipped (`cat $at_check_line_file`)"
	    at_skip_list="$at_skip_list $at_group"
	    at_errexit=false
	    ;;
	yes:*)
	    at_msg="expected failure (`cat $at_check_line_file`)"
	    at_xfail_list="$at_xfail_list $at_group"
	    at_errexit=false
	    ;;
	no:*)
	    at_msg="FAILED (`cat $at_check_line_file`)"
	    at_fail_list="$at_fail_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
      esac
      echo $at_msg
      at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
      case $at_status in
	0|77)
	  # $at_times_file is only available if the group succeeded.
	  # We're not including the group log, so the success message
	  # is written in the global log separately.  But we also
	  # write to the group log in case they're using -d.
	  if test -f $at_times_file; then
	    at_log_msg="$at_log_msg	(`sed 1d $at_times_file`)"
	    rm -f $at_times_file
          fi
	  echo "$at_log_msg" >> $at_group_log
	  echo "$at_log_msg" >&5

	  # Cleanup the group directory, unless the user wants the files.
	  $at_debug_p || rm -rf $at_group_dir
	  ;;
	*)
	  # Upon failure, include the log into the testsuite's global
	  # log.  The failure message is written in the group log.  It
	  # is later included in the global log.
	  echo "$at_log_msg" >> $at_group_log

	  # Upon failure, keep the group directory for autopsy, and
	  # create the debugging script.
	  {
	    echo "#! /bin/sh"
	    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\'''
	    echo "cd $at_dir"
	    echo 'exec ${CONFIG_SHELL-'"$SHELL"'}' "$0" \
	         '-v -d' "$at_debug_args" "$at_group" '${1+"$@"}'
	    echo 'exit 1'
	  } >$at_group_dir/run
	  chmod +x $at_group_dir/run
	  $at_errexit && break
	  ;;
      esac
      ;;
  esac
done

# Back to the top directory.
cd $at_dir

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`(date +%s) 2>/dev/null`
echo "$as_me: ending at: $at_stop_date" >&5
at_duration_s=`(expr $at_stop_time - $at_start_time) 2>/dev/null`
at_duration_m=`(expr $at_duration_s / 60) 2>/dev/null`
at_duration_h=`(expr $at_duration_m / 60) 2>/dev/null`
at_duration_s=`(expr $at_duration_s % 60) 2>/dev/null`
at_duration_m=`(expr $at_duration_m % 60) 2>/dev/null`
at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
if test "$at_duration" != "h m s"; then
  echo "$as_me: test suite duration: $at_duration" >&5
fi

# Wrap up the test suite with summary statistics.
at_skip_count=`set dummy $at_skip_list; shift; echo $#`
at_fail_count=`set dummy $at_fail_list; shift; echo $#`
at_xpass_count=`set dummy $at_xpass_list; shift; echo $#`
at_xfail_count=`set dummy $at_xfail_list; shift; echo $#`

at_run_count=`expr $at_group_count - $at_skip_count`
at_unexpected_count=`expr $at_xpass_count + $at_fail_count`
at_total_fail_count=`expr $at_xfail_count + $at_fail_count`

echo
cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
echo
{
  echo
  cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&5
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    cat <<\_ASBOX
## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
_ASBOX

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL $0 $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL $0 $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL $0 $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      cat <<\_ASBOX
## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##
_ASBOX
      echo
      for at_group in $at_fail_list
      do
        # Normalize the test group number.
        at_group_normalized=`expr "00000$at_group" : ".*\($at_format\)"`
        # Create a fresh directory for the next test group, and enter.
        at_group_dir=$at_suite_dir/$at_group_normalized
        at_group_log=$at_group_dir/$as_me.log
        cat $at_group_log
        echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $at_top_builddir/config.log ##
_ASBOX
      sed 's/^/| /' $at_top_builddir/config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  echo "Please send \`$as_me.log' and all information you think might help:"
  echo
  echo "   To: <foonly@users.sourceforge.net>"
  echo "   Subject: [blame 1.1] $as_me:$at_fail_list${at_fail_list:+ failed${at_xpass_list:+,}}$at_xpass_list${at_xpass_list:+ passed unexpectedly}"
  echo
  if test $at_debug_p = false; then
    echo
    echo 'You may investigate any problem if you feel able to do so, in which'
    echo 'case the test suite provides a good starting point.'
    echo
  fi
    exit 1
fi

exit 0


