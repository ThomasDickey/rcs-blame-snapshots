## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --lib=libmisc --source-base=lib --m4-base=m4 --doc-base=doc --aux-dir=. --no-libtool --macro-prefix=gl alloca argp calloc canonicalize dirname error exit free getcwd getline lstat malloc memchr memcmp memcpy memmove memset mktime obstack pathmax progname realloc setenv strchrnul strdup strftime strndup strpbrk strstr strtoul tzset unlocked-io xalloc xalloc-die xreadlink

AUTOMAKE_OPTIONS = 1.5 gnits

noinst_LIBRARIES = libmisc.a

libmisc_a_SOURCES =
libmisc_a_LIBADD = $(gl_LIBOBJS)
libmisc_a_DEPENDENCIES = $(gl_LIBOBJS)
EXTRA_libmisc_a_SOURCES =
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

## begin gnulib module alloca


EXTRA_DIST += alloca.c

EXTRA_libmisc_a_SOURCES += alloca.c

libmisc_a_LIBADD += @ALLOCA@
libmisc_a_DEPENDENCIES += @ALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/alloca_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

EXTRA_DIST += alloca_.h

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libmisc_a_SOURCES += allocsa.h allocsa.c

EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module argp

libmisc_a_SOURCES += argp.h argp-ba.c argp-eexst.c \
           argp-fmtstream.c argp-fmtstream.h argp-fs-xinl.c argp-help.c \
           argp-namefrob.h argp-parse.c argp-pin.c argp-pv.c argp-pvh.c \
           argp-xinl.c

## end   gnulib module argp

## begin gnulib module calloc


EXTRA_DIST += calloc.c

EXTRA_libmisc_a_SOURCES += calloc.c

## end   gnulib module calloc

## begin gnulib module canonicalize


EXTRA_DIST += canonicalize.c canonicalize.h pathmax.h

EXTRA_libmisc_a_SOURCES += canonicalize.c

## end   gnulib module canonicalize

## begin gnulib module cycle-check


EXTRA_DIST += cycle-check.c cycle-check.h

EXTRA_libmisc_a_SOURCES += cycle-check.c

## end   gnulib module cycle-check

## begin gnulib module dev-ino


EXTRA_DIST += dev-ino.h

## end   gnulib module dev-ino

## begin gnulib module dirname


EXTRA_DIST += basename.c dirname.c dirname.h stripslash.c

EXTRA_libmisc_a_SOURCES += basename.c dirname.c stripslash.c

## end   gnulib module dirname

## begin gnulib module error


EXTRA_DIST += error.c error.h

EXTRA_libmisc_a_SOURCES += error.c

## end   gnulib module error

## begin gnulib module exit

libmisc_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail


EXTRA_DIST += exitfail.c exitfail.h

EXTRA_libmisc_a_SOURCES += exitfail.c

## end   gnulib module exitfail

## begin gnulib module filenamecat


EXTRA_DIST += filenamecat.c filenamecat.h

EXTRA_libmisc_a_SOURCES += filenamecat.c

## end   gnulib module filenamecat

## begin gnulib module free


EXTRA_DIST += free.c

EXTRA_libmisc_a_SOURCES += free.c

## end   gnulib module free

## begin gnulib module getcwd


EXTRA_DIST += getcwd.c getcwd.h

EXTRA_libmisc_a_SOURCES += getcwd.c

## end   gnulib module getcwd

## begin gnulib module getdelim


EXTRA_DIST += getdelim.c getdelim.h

EXTRA_libmisc_a_SOURCES += getdelim.c

## end   gnulib module getdelim

## begin gnulib module getline


EXTRA_DIST += getline.c getline.h

EXTRA_libmisc_a_SOURCES += getline.c

## end   gnulib module getline

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)

# We need the following in order to create <getopt.h> when the system
# doesn't have one that works with the given compiler.
getopt.h: getopt_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/getopt_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

EXTRA_DIST += getopt.c getopt1.c getopt_.h getopt_int.h

EXTRA_libmisc_a_SOURCES += getopt.c getopt1.c

## end   gnulib module getopt

## begin gnulib module gettext-h

libmisc_a_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module gettimeofday


EXTRA_DIST += gettimeofday.c

EXTRA_libmisc_a_SOURCES += gettimeofday.c

## end   gnulib module gettimeofday

## begin gnulib module lstat


EXTRA_DIST += lstat.c lstat.h

EXTRA_libmisc_a_SOURCES += lstat.c

## end   gnulib module lstat

## begin gnulib module malloc


EXTRA_DIST += malloc.c

EXTRA_libmisc_a_SOURCES += malloc.c

## end   gnulib module malloc

## begin gnulib module mbchar


EXTRA_DIST += mbchar.c mbchar.h

EXTRA_libmisc_a_SOURCES += mbchar.c

## end   gnulib module mbchar

## begin gnulib module mbuiter

libmisc_a_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module memchr


EXTRA_DIST += memchr.c

EXTRA_libmisc_a_SOURCES += memchr.c

## end   gnulib module memchr

## begin gnulib module memcmp


EXTRA_DIST += memcmp.c

EXTRA_libmisc_a_SOURCES += memcmp.c

## end   gnulib module memcmp

## begin gnulib module memcpy


EXTRA_DIST += memcpy.c

EXTRA_libmisc_a_SOURCES += memcpy.c

## end   gnulib module memcpy

## begin gnulib module memmove


EXTRA_DIST += memmove.c

EXTRA_libmisc_a_SOURCES += memmove.c

## end   gnulib module memmove

## begin gnulib module mempcpy


EXTRA_DIST += mempcpy.c mempcpy.h

EXTRA_libmisc_a_SOURCES += mempcpy.c

## end   gnulib module mempcpy

## begin gnulib module memset


EXTRA_DIST += memset.c

EXTRA_libmisc_a_SOURCES += memset.c

## end   gnulib module memset

## begin gnulib module minmax

libmisc_a_SOURCES += minmax.h

## end   gnulib module minmax

## begin gnulib module mktime


EXTRA_DIST += mktime.c

EXTRA_libmisc_a_SOURCES += mktime.c

## end   gnulib module mktime

## begin gnulib module obstack


EXTRA_DIST += obstack.c obstack.h

EXTRA_libmisc_a_SOURCES += obstack.c

## end   gnulib module obstack

## begin gnulib module pathmax


EXTRA_DIST += pathmax.h

## end   gnulib module pathmax

## begin gnulib module progname

libmisc_a_SOURCES += progname.h progname.c

## end   gnulib module progname

## begin gnulib module readlink


EXTRA_DIST += readlink.c

EXTRA_libmisc_a_SOURCES += readlink.c

## end   gnulib module readlink

## begin gnulib module realloc


EXTRA_DIST += realloc.c

EXTRA_libmisc_a_SOURCES += realloc.c

## end   gnulib module realloc

## begin gnulib module same-inode


EXTRA_DIST += same-inode.h

## end   gnulib module same-inode

## begin gnulib module setenv


EXTRA_DIST += setenv.c setenv.h unsetenv.c

EXTRA_libmisc_a_SOURCES += setenv.c unsetenv.c

## end   gnulib module setenv

## begin gnulib module size_max

libmisc_a_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

EXTRA_DIST += stdbool_.h

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	      -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	      -e 's|@''ABSOLUTE_STDINT_H''@|$(ABSOLUTE_STDINT_H)|g' \
	      -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	      -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	      -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	      -e 's/@''HAVE_UNSIGNED_LONG_LONG_INT''@/$(HAVE_UNSIGNED_LONG_LONG_INT)/g' \
	      -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	      -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	      -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	      -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	      -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	      -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	      -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	      -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	      -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	      < $(srcdir)/stdint_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

EXTRA_DIST += stdint_.h

## end   gnulib module stdint

## begin gnulib module strcase


EXTRA_DIST += strcase.h strcasecmp.c strncasecmp.c

EXTRA_libmisc_a_SOURCES += strcasecmp.c strncasecmp.c

## end   gnulib module strcase

## begin gnulib module strchrnul


EXTRA_DIST += strchrnul.c strchrnul.h

EXTRA_libmisc_a_SOURCES += strchrnul.c

## end   gnulib module strchrnul

## begin gnulib module strdup


EXTRA_DIST += strdup.c strdup.h

EXTRA_libmisc_a_SOURCES += strdup.c

## end   gnulib module strdup

## begin gnulib module strftime


EXTRA_DIST += strftime.c strftime.h

EXTRA_libmisc_a_SOURCES += strftime.c

## end   gnulib module strftime

## begin gnulib module strndup


EXTRA_DIST += strndup.c strndup.h

EXTRA_libmisc_a_SOURCES += strndup.c

## end   gnulib module strndup

## begin gnulib module strnlen


EXTRA_DIST += strnlen.c strnlen.h

EXTRA_libmisc_a_SOURCES += strnlen.c

## end   gnulib module strnlen

## begin gnulib module strnlen1

libmisc_a_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strpbrk


EXTRA_DIST += strpbrk.c strpbrk.h

EXTRA_libmisc_a_SOURCES += strpbrk.c

## end   gnulib module strpbrk

## begin gnulib module strstr


EXTRA_DIST += strstr.c strstr.h

EXTRA_libmisc_a_SOURCES += strstr.c

## end   gnulib module strstr

## begin gnulib module strtol


EXTRA_DIST += strtol.c

EXTRA_libmisc_a_SOURCES += strtol.c

## end   gnulib module strtol

## begin gnulib module strtoul


EXTRA_DIST += strtoul.c

EXTRA_libmisc_a_SOURCES += strtoul.c

## end   gnulib module strtoul

## begin gnulib module sys_stat

BUILT_SOURCES += $(SYS_STAT_H)

# We need the following in order to create <sys/stat.h> when the system
# has one that is incomplete.
sys/stat.h: stat_.h
	test -d sys || mkdir sys
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''ABSOLUTE_SYS_STAT_H''@|$(ABSOLUTE_SYS_STAT_H)|g' \
	      < $(srcdir)/stat_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += sys/stat.h sys/stat.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += stat_.h

## end   gnulib module sys_stat

## begin gnulib module sysexits

BUILT_SOURCES += $(SYSEXITS_H)

# We need the following in order to create <sysexits.h> when the system
# doesn't have one that works with the given compiler.
sysexits.h: sysexit_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/sysexit_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += sysexits.h sysexits.h-t

EXTRA_DIST += sysexit_.h

## end   gnulib module sysexits

## begin gnulib module time_r


EXTRA_DIST += time_r.c time_r.h

EXTRA_libmisc_a_SOURCES += time_r.c

## end   gnulib module time_r

## begin gnulib module unistd

BUILT_SOURCES += $(UNISTD_H)

# We need the following in order to create an empty placeholder for
# <unistd.h> when the system doesn't have one.
unistd.h:
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '/* Empty placeholder for $@.  */'; \
	} > $@
MOSTLYCLEANFILES += unistd.h

## end   gnulib module unistd

## begin gnulib module unlocked-io


EXTRA_DIST += unlocked-io.h

## end   gnulib module unlocked-io

## begin gnulib module vasnprintf


EXTRA_DIST += asnprintf.c printf-args.c printf-args.h printf-parse.c printf-parse.h vasnprintf.c vasnprintf.h

EXTRA_libmisc_a_SOURCES += asnprintf.c printf-args.c printf-parse.c vasnprintf.c

## end   gnulib module vasnprintf

## begin gnulib module vsnprintf


EXTRA_DIST += vsnprintf.c vsnprintf.h

EXTRA_libmisc_a_SOURCES += vsnprintf.c

## end   gnulib module vsnprintf

## begin gnulib module wcwidth

libmisc_a_SOURCES += wcwidth.h

## end   gnulib module wcwidth

## begin gnulib module xalloc


EXTRA_DIST += xalloc.h xmalloc.c

EXTRA_libmisc_a_SOURCES += xmalloc.c

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libmisc_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xgetcwd


EXTRA_DIST += xgetcwd.c xgetcwd.h

EXTRA_libmisc_a_SOURCES += xgetcwd.c

## end   gnulib module xgetcwd

## begin gnulib module xreadlink


EXTRA_DIST += xreadlink.c xreadlink.h

EXTRA_libmisc_a_SOURCES += xreadlink.c

## end   gnulib module xreadlink

## begin gnulib module xsize

libmisc_a_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module xstrndup

libmisc_a_SOURCES += xstrndup.h xstrndup.c

## end   gnulib module xstrndup


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done
